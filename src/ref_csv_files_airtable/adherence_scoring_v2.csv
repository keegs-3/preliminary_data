config_id,config_name,scoring_method,configuration_json,use_cases,implementation_documentation,examples,recommendations_v2,updated,challenges_v3
SC-BINARY-DAILY,Binary Daily Threshold,binary_threshold,"{
            ""method"": ""binary_threshold"",
            ""formula"": ""if (actual_value >= threshold) then success_value else failure_value"",
            ""evaluation_pattern"": ""daily"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"", 
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""threshold"",
                ""success_value"",
                ""failure_value""
            ],
            ""optional_fields"": [
                ""comparison_operator"",
                ""frequency_requirement"", 
                ""units"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""examples"": {
                        ""reduction"": ""Alcohol limits, sugar limits (countdown goals)"",
                        ""buildup"": ""Protein intake, exercise sessions (buildup goals)"", 
                        ""assessment"": ""Sleep quality, mood tracking (measurement goals)""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How progress is visualized in UI"",
                    ""ui_behavior"": {
                        ""countdown"": ""Ring starts full (100%), empties with violations - 'X remaining'"",
                        ""buildup"": ""Ring starts empty (0%), fills with progress - 'X% toward target'"",
                        ""measurement"": ""Ring populates after measurement - 'Score: X%'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Type of evaluation period - affects reset behavior and user mental model"",
                    ""reset_behavior"": {
                        ""daily"": ""Resets every day at 00:00"",
                        ""calendar_week"": ""Resets every Monday at 00:00"", 
                        ""rolling_7_day"": ""Continuous 7-day sliding window"",
                        ""rolling_30_day"": ""Continuous 30-day sliding window""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring - determines data aggregation method""
                },
                ""evaluation_period"": {
                    ""type"": ""string"", 
                    ""allowed_values"": [""daily"", ""rolling_7_day"", ""calendar_week""],
                    ""description"": ""Assessment timeframe for scoring calculation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""simple_target"", ""frequency_target""],
                    ""description"": ""How success is determined""
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value"", ""exists""],
                    ""description"": ""How actual_value is derived from tracked data""
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Explicit field mappings for calculation_method"",
                    ""examples"": {
                        ""simple"": ""alcohol_drinks_count"",
                        ""complex"": {
                            ""end_field"": ""wake_time"",
                            ""start_field"": ""sleep_time""
                        }
                    }
                },
                ""threshold"": {
                    ""type"": ""value"",
                    ""description"": ""Minimum threshold to meet (yes/no, number, duration)""
                },
                ""success_value"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Score when threshold met""
                },
                ""failure_value"": {
                    ""type"": ""number"", 
                    ""default"": 0,
                    ""description"": ""Score when threshold not met""
                },
                ""comparison_operator"": {
                    ""type"": ""string"",
                    ""allowed_values"": ["">="", "">"", ""="", ""<"", ""<=""],
                    ""default"": "">="",
                    ""description"": ""Comparison operator for threshold evaluation""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day evaluations"",
                    ""examples"": [""daily"", ""5 of 7 days"", ""3 sessions per week""]
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier""
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the scoring configuration""
                }
            },
            ""field_relationships"": {
                ""goal_type_mapping"": {
                    ""reduction + countdown"": ""Violations decrease available allowance"",
                    ""buildup + buildup"": ""Achievements increase progress toward goal"", 
                    ""assessment + measurement"": ""Measurements populate evaluation score""
                },
                ""period_evaluation_alignment"": {
                    ""period_type"": ""Controls reset/rolling behavior"",
                    ""evaluation_period"": ""Controls scoring calculation window"",
                    ""note"": ""These should typically match but can differ for complex scenarios""
                }
            },
            ""validation_rules"": [
                ""goal_type and progress_direction must be logically consistent"",
                ""period_type and evaluation_period should typically align"",
                ""tracked_metrics must contain valid field references"", 
                ""threshold type must match measurement_type expectations"",
                ""frequency_requirement only valid when evaluation_period spans multiple days""
            ]
        }","Binary scoring evaluated daily: 100% if threshold met that day, 0% if not. Use for daily compliance requirements where each day is independent.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#1-binary-threshold-daily-sc-binary-daily,"supplement taken (yes/no), morning light exposure (≥20min), meal timing deadlines","REC0001.1,REC0002.1,REC0002.2,REC0002.3,REC0005.1 (i),REC0005.1 (ii),REC0008.1,REC0009.3,REC0010.3,REC0011.1,REC0015.3,REC0009.1",checked,
SC-BINARY-FREQUENCY,Binary Frequency Window,binary_threshold,"{
            ""method"": ""binary_threshold"",
            ""formula"": ""if (actual_value >= threshold) then success_value else failure_value"",
            ""evaluation_pattern"": ""frequency"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""frequency_requirement"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""threshold"",
                ""success_value"",
                ""failure_value""
            ],
            ""optional_fields"": [
                ""comparison_operator"",
                ""units"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""frequency_examples"": {
                        ""reduction"": ""7 consecutive alcohol-free days, ≤2 sugar days per week"",
                        ""buildup"": ""5 of 7 workout days, 6 of 7 protein target days"",
                        ""assessment"": ""4 of 7 good sleep days, mood tracking streaks""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How progress is visualized over the frequency window"",
                    ""frequency_ui_behavior"": {
                        ""countdown"": ""Shows remaining violations allowed in window - 'X violations remaining'"",
                        ""buildup"": ""Shows successful days accumulated - 'X of Y days achieved'"",
                        ""measurement"": ""Shows current streak/pattern - 'Current streak: X days'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Type of frequency window - affects reset behavior and user mental model"",
                    ""frequency_behavior"": {
                        ""rolling_7_day"": ""Continuous 7-day sliding window - streak accountability"",
                        ""rolling_30_day"": ""Continuous 30-day sliding window - long-term patterns"",
                        ""calendar_week"": ""Monday-Sunday windows - weekly habit building"",
                        ""calendar_month"": ""Monthly cycles - longer-term consistency""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring across the frequency window""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Assessment timeframe for frequency evaluation"",
                    ""note"": ""Should typically match period_type for frequency patterns""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""frequency_target""],
                    ""description"": ""Success determined by meeting frequency requirements within the window""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Specific frequency specification for success"",
                    ""format_examples"": [
                        ""X successful days out of Y-day window"",
                        ""7 consecutive days"",
                        ""5 of 7 days"",
                        ""3 sessions per week"",
                        ""≤2 violation days per week""
                    ],
                    ""pattern_types"": {
                        ""consecutive"": ""X consecutive successful days"",
                        ""frequency"": ""X out of Y days successful"",
                        ""constraint"": ""≤X violation days per period""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value"", ""exists""],
                    ""description"": ""How daily actual_value is derived for frequency evaluation"",
                    ""frequency_usage"": {
                        ""exists"": ""Daily binary success/failure evaluation"",
                        ""count"": ""Daily count meeting threshold for frequency tracking"",
                        ""sum"": ""Daily sum meeting threshold for frequency patterns""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for daily calculation within frequency window"",
                    ""frequency_examples"": {
                        ""simple_binary"": ""alcohol_consumed"",
                        ""simple_count"": ""workout_sessions"",
                        ""complex_duration"": {
                            ""end_field"": ""wake_time"",
                            ""start_field"": ""sleep_time""
                        }
                    }
                },
                ""threshold"": {
                    ""type"": ""value"",
                    ""description"": ""Daily threshold that must be met for successful day counting"",
                    ""frequency_context"": ""Each day is evaluated against this threshold, then frequency pattern is assessed""
                },
                ""success_value"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Score when frequency requirement is met across the window""
                },
                ""failure_value"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Score when frequency requirement is not met""
                },
                ""comparison_operator"": {
                    ""type"": ""string"",
                    ""allowed_values"": ["">="", "">"", ""="", ""<"", ""<=""],
                    ""default"": "">="",
                    ""description"": ""Daily threshold comparison for success day determination""
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for threshold values""
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the frequency-based scoring configuration""
                }
            },
            ""frequency_scoring_logic"": {
                ""step_1"": ""Daily evaluation: actual_value comparison_operator threshold → daily_success"",
                ""step_2"": ""Window aggregation: Count successful days in evaluation_period"",
                ""step_3"": ""Frequency assessment: Does success_count meet frequency_requirement?"",
                ""step_4"": ""Final score: frequency_met ? success_value : failure_value""
            },
            ""field_relationships"": {
                ""goal_type_frequency_mapping"": {
                    ""reduction + countdown"": ""Track violation days, countdown remaining violations allowed"",
                    ""buildup + buildup"": ""Track success days, build up toward frequency target"",
                    ""assessment + measurement"": ""Track pattern consistency, measure streak quality""
                },
                ""period_evaluation_alignment"": {
                    ""period_type"": ""User mental model for frequency window"",
                    ""evaluation_period"": ""Technical scoring window"",
                    ""frequency_requirement"": ""Must specify pattern within the window"",
                    ""note"": ""All three should align for frequency-based goals""
                }
            },
            ""validation_rules"": [
                ""goal_type and progress_direction must be logically consistent"",
                ""period_type and evaluation_period should match for frequency patterns"",
                ""frequency_requirement must specify pattern within the evaluation window"",
                ""success_criteria must be 'frequency_target' for frequency-based scoring"",
                ""tracked_metrics must contain valid daily measurement fields"",
                ""threshold type must match measurement_type expectations""
            ],
            ""use_case_examples"": {
                ""alcohol_elimination"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""rolling_7_day"",
                    ""frequency_requirement"": ""7 consecutive alcohol-free days"",
                    ""user_experience"": ""Streak accountability - any violation resets the 7-day window""
                },
                ""workout_consistency"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""calendar_week"",
                    ""frequency_requirement"": ""5 of 7 workout days"",
                    ""user_experience"": ""Weekly habit building - progress toward 5-day target""
                },
                ""sleep_quality_pattern"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""rolling_7_day"",
                    ""frequency_requirement"": ""6 of 7 good sleep days"",
                    ""user_experience"": ""Pattern consistency - maintaining sleep quality over time""
                }
            }
        }",Binary scoring based on successful days within a trailing 7-day window. Use for 'X out of Y days' requirements where weekly frequency matters more than daily streaks.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#2-binary-threshold-frequency-sc-binary-frequency,"caffeine timing (3 out of 7 days), step targets (2 out of 7 days), activity thresholds","REC0013.1,REC0013.2,REC0013.3,REC0015.2,REC0010.1,REC0010.2,REC0005.3,REC0015.1,REC0009.2",checked,CH-01-REC0001.1
SC-PROPORTIONAL-DAILY,Proportional Daily Achievement,proportional,"{
            ""method"": ""proportional"",
            ""formula"": ""(actual_value / target) * 100"",
            ""evaluation_pattern"": ""daily"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""target"",
                ""units""
            ],
            ""optional_fields"": [
                ""minimum_threshold"",
                ""maximum_cap"",
                ""partial_credit"",
                ""frequency_requirement"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""proportional_examples"": {
                        ""reduction"": ""Calorie reduction targets, alcohol intake limits with partial scoring"",
                        ""buildup"": ""Protein intake targets, water consumption goals with progress tracking"",
                        ""assessment"": ""Activity level scoring, nutrient intake assessment with proportional credit""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How proportional progress is visualized in UI"",
                    ""proportional_ui_behavior"": {
                        ""countdown"": ""Ring starts full, depletes with overconsumption - 'X% remaining of limit'"",
                        ""buildup"": ""Ring fills proportionally toward target - 'X% of target achieved'"",
                        ""measurement"": ""Ring shows proportional score - 'Performance: X% of target'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Type of evaluation period for proportional scoring"",
                    ""proportional_behavior"": {
                        ""daily"": ""Fresh proportional target each day at 00:00"",
                        ""calendar_week"": ""Weekly proportional targets reset Monday"",
                        ""rolling_7_day"": ""Continuous 7-day average proportional scoring"",
                        ""rolling_30_day"": ""Continuous 30-day average proportional scoring""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring for proportional calculation"",
                    ""proportional_context"": ""Determines how actual_value is aggregated for target comparison""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Assessment timeframe for proportional scoring calculation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""simple_target"", ""proportional_target""],
                    ""description"": ""How proportional success is determined"",
                    ""criteria_types"": {
                        ""simple_target"": ""100% = target achieved, partial credit below"",
                        ""proportional_target"": ""Flexible scoring with custom thresholds and caps""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value""],
                    ""description"": ""How actual_value is derived for proportional calculation"",
                    ""proportional_usage"": {
                        ""sum"": ""Total intake/activity for proportional comparison"",
                        ""average"": ""Average performance for proportional scoring"",
                        ""count"": ""Count of items for proportional target achievement""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for proportional calculation"",
                    ""proportional_examples"": {
                        ""simple_intake"": ""protein_servings"",
                        ""simple_duration"": ""exercise_minutes"",
                        ""complex_calculation"": {
                            ""primary_field"": ""total_calories"",
                            ""adjustment_field"": ""exercise_calories_burned""
                        }
                    }
                },
                ""target"": {
                    ""type"": ""number"",
                    ""description"": ""The target value for 100% proportional score"",
                    ""proportional_context"": ""Base value for (actual_value / target) * 100 calculation""
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for target and actual values"",
                    ""examples"": [""grams"", ""minutes"", ""servings"", ""calories"", ""ounces"", ""steps""]
                },
                ""minimum_threshold"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Minimum value for any proportional points"",
                    ""usage"": ""Prevents negative scores, sets floor for proportional calculation""
                },
                ""maximum_cap"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Maximum score cap for proportional calculation"",
                    ""usage"": ""Prevents scores above 100% unless intentionally allowing over-achievement""
                },
                ""partial_credit"": {
                    ""type"": ""boolean"",
                    ""default"": true,
                    ""description"": ""Whether partial progress toward target counts for scoring"",
                    ""behavior"": {
                        ""true"": ""Linear proportional scoring from 0% to 100%"",
                        ""false"": ""Binary scoring - only 100% target achievement gets points""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day proportional evaluation"",
                    ""examples"": [""daily"", ""5 of 7 days at 80%"", ""weekly average 100%""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the proportional scoring configuration""
                }
            },
            ""proportional_scoring_logic"": {
                ""step_1"": ""Data aggregation: Apply calculation_method to tracked_metrics"",
                ""step_2"": ""Proportional calculation: (actual_value / target) * 100"",
                ""step_3"": ""Threshold application: Apply minimum_threshold floor"",
                ""step_4"": ""Cap application: Apply maximum_cap ceiling"",
                ""step_5"": ""Partial credit: Apply partial_credit rules if enabled""
            },
            ""field_relationships"": {
                ""goal_type_proportional_mapping"": {
                    ""reduction + countdown"": ""Proportional consumption tracking - ring depletes with overuse"",
                    ""buildup + buildup"": ""Proportional achievement tracking - ring fills with progress"",
                    ""assessment + measurement"": ""Proportional performance scoring - ring shows relative performance""
                },
                ""target_calculation_alignment"": {
                    ""target"": ""100% achievement benchmark"",
                    ""actual_value"": ""Derived from tracked_metrics + calculation_method"",
                    ""proportional_score"": ""(actual_value / target) * 100"",
                    ""final_score"": ""Apply minimum_threshold and maximum_cap bounds""
                }
            },
            ""validation_rules"": [
                ""goal_type and progress_direction must be logically consistent"",
                ""target must be positive number greater than 0"",
                ""minimum_threshold must be >= 0"",
                ""maximum_cap must be >= minimum_threshold"",
                ""tracked_metrics must contain valid field references for calculation_method"",
                ""units must match expected measurement_type format""
            ],
            ""use_case_examples"": {
                ""protein_intake_buildup"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""daily"",
                    ""target"": 150,
                    ""units"": ""grams"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""protein_grams"",
                    ""user_experience"": ""Ring fills as protein intake approaches 150g target - 80g = 53% filled""
                },
                ""calorie_limit_reduction"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""daily"",
                    ""target"": 2000,
                    ""units"": ""calories"",
                    ""maximum_cap"": 100,
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""total_calories"",
                    ""user_experience"": ""Ring starts full, depletes as calories consumed - 1800 cal = 90% remaining""
                },
                ""exercise_assessment"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""daily"",
                    ""target"": 60,
                    ""units"": ""minutes"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""exercise_duration"",
                    ""user_experience"": ""Ring shows proportional performance - 45 min = 75% of target achieved""
                }
            },
            ""scoring_variations"": {
                ""linear_proportional"": {
                    ""partial_credit"": true,
                    ""minimum_threshold"": 0,
                    ""maximum_cap"": 100,
                    ""behavior"": ""Smooth linear scaling from 0% to 100%""
                },
                ""threshold_proportional"": {
                    ""partial_credit"": true,
                    ""minimum_threshold"": 20,
                    ""maximum_cap"": 100,
                    ""behavior"": ""No points below 20% achievement, then linear scaling""
                },
                ""over_achievement_allowed"": {
                    ""partial_credit"": true,
                    ""minimum_threshold"": 0,
                    ""maximum_cap"": 150,
                    ""behavior"": ""Allows scores above 100% for exceeding targets""
                },
                ""binary_proportional"": {
                    ""partial_credit"": false,
                    ""minimum_threshold"": 0,
                    ""maximum_cap"": 100,
                    ""behavior"": ""Only 100% target achievement receives points""
                }
            }
        }",Proportional scoring evaluated daily: (Actual/Target) × 100%. Use when partial daily progress should count and evaluation is per day.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#3-proportional-daily-sc-proportional-daily,"6/10 daily sessions = 60%, 8000/10000 daily steps = 80%. Can set minimum threshold and maximum cap.","REC0001.3 (iii),REC0001.3 (iv),REC0001.3 (i),REC0001.3 (ii),REC0006.2,REC0011.2,REC0006.1,REC0007.1,REC0001.2,REC0012.1,REC0006.3",checked,
SC-PROPORTIONAL-FREQUENCY,Proportional Frequency Window,proportional,"{
            ""method"": ""proportional"",
            ""formula"": ""(actual_value / target) * 100"",
            ""evaluation_pattern"": ""frequency"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""frequency_requirement"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""target"",
                ""units""
            ],
            ""optional_fields"": [
                ""minimum_threshold"",
                ""maximum_cap"",
                ""partial_credit"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""frequency_proportional_examples"": {
                        ""reduction"": ""Weekly calorie limit with daily proportional tracking and frequency consistency"",
                        ""buildup"": ""Protein targets achieved on 5 of 7 days with proportional daily scoring"",
                        ""assessment"": ""Exercise performance consistency with proportional achievement tracking""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How proportional frequency progress is visualized in UI"",
                    ""frequency_proportional_ui_behavior"": {
                        ""countdown"": ""Shows frequency of limit adherence - 'X of Y days within limit'"",
                        ""buildup"": ""Shows frequency of target achievement - 'X of Y days achieved target'"",
                        ""measurement"": ""Shows consistency pattern - 'Average X% achievement over Y days'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Type of frequency window for proportional evaluation"",
                    ""frequency_proportional_behavior"": {
                        ""rolling_7_day"": ""Continuous 7-day window with daily proportional scores"",
                        ""rolling_30_day"": ""Continuous 30-day window for long-term proportional consistency"",
                        ""calendar_week"": ""Weekly cycles with proportional frequency tracking"",
                        ""calendar_month"": ""Monthly cycles with proportional achievement patterns""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring for daily proportional calculation within frequency window""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Assessment timeframe for proportional frequency evaluation"",
                    ""note"": ""Should match period_type for consistent frequency-proportional scoring""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""frequency_target"", ""proportional_frequency_target""],
                    ""description"": ""How proportional frequency success is determined"",
                    ""criteria_types"": {
                        ""frequency_target"": ""X of Y days achieving proportional target (>=100%)"",
                        ""proportional_frequency_target"": ""Average proportional score across frequency window""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Specific frequency specification with proportional achievement context"",
                    ""format_examples"": [
                        ""achieve 100% target on 5 of 7 days"",
                        ""achieve >=80% target on 6 of 7 days"",
                        ""average 90% achievement over 7-day window"",
                        ""5 successful days out of 7-day window (>=target)""
                    ],
                    ""pattern_types"": {
                        ""binary_frequency"": ""X days achieving 100% of target"",
                        ""threshold_frequency"": ""X days achieving >=Y% of target"",
                        ""average_frequency"": ""Average Z% achievement over window""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value""],
                    ""description"": ""How daily actual_value is derived for proportional calculation within frequency window"",
                    ""frequency_proportional_usage"": {
                        ""sum"": ""Daily sum for proportional comparison across frequency window"",
                        ""average"": ""Daily average for consistent proportional performance"",
                        ""count"": ""Daily count for proportional frequency achievement""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for daily proportional calculation within frequency evaluation"",
                    ""frequency_proportional_examples"": {
                        ""simple_daily_intake"": ""daily_protein_grams"",
                        ""simple_daily_duration"": ""daily_exercise_minutes"",
                        ""complex_daily_calculation"": {
                            ""primary_field"": ""daily_calories_consumed"",
                            ""target_adjustment"": ""daily_calorie_target""
                        }
                    }
                },
                ""target"": {
                    ""type"": ""number"",
                    ""description"": ""Daily target value for proportional calculation within frequency window"",
                    ""frequency_context"": ""Each day evaluated as (daily_actual / target) * 100, then frequency pattern assessed""
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for daily target and actual values"",
                    ""examples"": [""grams"", ""minutes"", ""servings"", ""calories"", ""ounces"", ""steps""]
                },
                ""minimum_threshold"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Minimum daily proportional score for frequency counting"",
                    ""frequency_usage"": ""Sets floor for daily scores before frequency pattern evaluation""
                },
                ""maximum_cap"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Maximum daily proportional score cap"",
                    ""frequency_usage"": ""Caps daily scores before frequency aggregation""
                },
                ""partial_credit"": {
                    ""type"": ""boolean"",
                    ""default"": true,
                    ""description"": ""Whether partial daily progress counts in frequency evaluation"",
                    ""frequency_behavior"": {
                        ""true"": ""Days with partial achievement (e.g., 60% of target) count proportionally in frequency"",
                        ""false"": ""Only days achieving 100% of target count as successful in frequency""
                    }
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the proportional frequency scoring configuration""
                }
            },
            ""proportional_frequency_scoring_logic"": {
                ""step_1"": ""Daily evaluation: Apply calculation_method to tracked_metrics for each day"",
                ""step_2"": ""Daily proportional calculation: (daily_actual_value / target) * 100"",
                ""step_3"": ""Daily score bounds: Apply minimum_threshold floor and maximum_cap ceiling"",
                ""step_4"": ""Frequency pattern assessment: Evaluate daily scores against frequency_requirement"",
                ""step_5"": ""Final score: Based on frequency pattern achievement (binary or proportional)""
            },
            ""field_relationships"": {
                ""goal_type_frequency_proportional_mapping"": {
                    ""reduction + countdown"": ""Track frequency of staying within proportional limits"",
                    ""buildup + buildup"": ""Track frequency of achieving proportional targets"", 
                    ""assessment + measurement"": ""Track consistency of proportional performance patterns""
                },
                ""frequency_proportional_alignment"": {
                    ""period_type"": ""Frequency window for pattern evaluation"",
                    ""evaluation_period"": ""Technical scoring window (should match period_type)"",
                    ""frequency_requirement"": ""Pattern specification within the window"",
                    ""target"": ""Daily proportional benchmark"",
                    ""note"": ""All components must align for coherent frequency-proportional scoring""
                }
            },
            ""validation_rules"": [
                ""goal_type and progress_direction must be logically consistent"",
                ""period_type and evaluation_period should match for frequency patterns"",
                ""frequency_requirement must specify achievable pattern within evaluation window"",
                ""target must be positive number greater than 0"",
                ""minimum_threshold must be >= 0 and <= maximum_cap"",
                ""success_criteria must be frequency-based for frequency evaluation"",
                ""tracked_metrics must contain valid daily measurement fields""
            ],
            ""use_case_examples"": {
                ""weekly_protein_consistency"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""calendar_week"",
                    ""target"": 150,
                    ""units"": ""grams"",
                    ""frequency_requirement"": ""achieve >=80% target on 5 of 7 days"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_protein_grams"",
                    ""user_experience"": ""Weekly habit building - need 5 days hitting 120g+ protein (80% of 150g target)""
                },
                ""calorie_limit_consistency"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""rolling_7_day"",
                    ""target"": 2000,
                    ""units"": ""calories"",
                    ""frequency_requirement"": ""stay <=100% limit on 6 of 7 days"",
                    ""maximum_cap"": 100,
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_total_calories"",
                    ""user_experience"": ""Streak accountability - maintain calorie discipline 6 of 7 days""
                },
                ""exercise_performance_pattern"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""rolling_7_day"",
                    ""target"": 60,
                    ""units"": ""minutes"",
                    ""frequency_requirement"": ""average 85% achievement over 7-day window"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_exercise_minutes"",
                    ""user_experience"": ""Performance consistency - maintain average 51+ minutes daily (85% of 60min target)""
                }
            },
            ""frequency_scoring_variations"": {
                ""binary_frequency_proportional"": {
                    ""partial_credit"": false,
                    ""frequency_requirement"": ""achieve 100% target on X of Y days"",
                    ""behavior"": ""Only days hitting full target count toward frequency requirement""
                },
                ""threshold_frequency_proportional"": {
                    ""partial_credit"": true,
                    ""frequency_requirement"": ""achieve >=80% target on X of Y days"", 
                    ""minimum_threshold"": 80,
                    ""behavior"": ""Days hitting 80%+ count as successful for frequency""
                },
                ""average_frequency_proportional"": {
                    ""partial_credit"": true,
                    ""frequency_requirement"": ""average 90% achievement over window"",
                    ""behavior"": ""All daily scores contribute to window average for final scoring""
                },
                ""flexible_frequency_proportional"": {
                    ""partial_credit"": true,
                    ""frequency_requirement"": ""5 of 7 days >=70%, average 85%"",
                    ""behavior"": ""Dual criteria - frequency threshold plus window average requirement""
                }
            },
            ""ui_complexity_considerations"": {
                ""daily_progress_display"": ""Show daily proportional scores (45/60 min = 75%)"",
                ""frequency_progress_display"": ""Show frequency achievement (3 of 5 target days met)"",
                ""window_progress_display"": ""Show overall window status (Week: 4/7 days, 82% average)"",
                ""success_messaging"": ""Combine proportional + frequency context ('Great! 4 of 5 target days achieved')""
            }
        }","Proportional scoring evaluated daily, then frequency-based success within a trailing 7-day window. Use for 'achieve X target on Y of Z days' where partial daily progress counts and frequency matters.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#4-proportional-frequency-sc-proportional-frequency,"90min activity on 5 of 7 days (70min = 78% toward daily target), sedentary limits on 6 of 7 days","REC0003.1,REC0003.2,REC0003.3",checked,
SC-ZONE-5TIER-DAILY,5-Tier Zone Daily Scoring,zone_based,"{
            ""method"": ""zone_based"",
            ""formula"": ""score based on which zone actual_value falls into"",
            ""evaluation_pattern"": ""daily"",
            ""tier_count"": 5,
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""zones"",
                ""units""
            ],
            ""optional_fields"": [
                ""grace_range"",
                ""boundary_handling"",
                ""frequency_requirement"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""zone_examples"": {
                        ""reduction"": ""Blood pressure zones, alcohol consumption tiers with optimal low ranges"",
                        ""buildup"": ""Exercise intensity zones, protein intake tiers with optimal high ranges"",
                        ""assessment"": ""Sleep quality zones, mood assessment tiers with optimal middle ranges""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How zone-based progress is visualized in UI"",
                    ""zone_ui_behavior"": {
                        ""countdown"": ""Ring color reflects zone danger level - green optimal, red excessive"",
                        ""buildup"": ""Ring color reflects zone achievement - red insufficient, green optimal"",
                        ""measurement"": ""Ring color reflects zone assessment - gradient across all 5 zones""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Type of evaluation period for zone-based scoring"",
                    ""zone_behavior"": {
                        ""daily"": ""Fresh zone evaluation each day at 00:00"",
                        ""calendar_week"": ""Weekly zone pattern tracking reset Monday"",
                        ""rolling_7_day"": ""Continuous 7-day zone performance averaging"",
                        ""rolling_30_day"": ""Continuous 30-day zone trend analysis""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring for zone classification"",
                    ""zone_context"": ""Determines how actual_value is aggregated for zone boundary evaluation""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Assessment timeframe for zone-based scoring calculation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""simple_target"", ""optimal_zone_target""],
                    ""description"": ""How zone-based success is determined"",
                    ""criteria_types"": {
                        ""simple_target"": ""Highest scoring zone = success"",
                        ""optimal_zone_target"": ""Specific optimal zone(s) defined for success""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value""],
                    ""description"": ""How actual_value is derived for zone classification"",
                    ""zone_usage"": {
                        ""sum"": ""Total aggregation for zone boundary evaluation"",
                        ""average"": ""Average performance for zone classification"",
                        ""last_value"": ""Most recent measurement for current zone status""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for zone calculation"",
                    ""zone_examples"": {
                        ""simple_measurement"": ""sleep_duration_hours"",
                        ""simple_scale"": ""mood_rating_1_10"",
                        ""complex_calculation"": {
                            ""end_field"": ""bedtime"",
                            ""start_field"": ""wake_time"",
                            ""calculation"": ""duration_between""
                        }
                    }
                },
                ""zones"": {
                    ""type"": ""array"",
                    ""description"": ""List of 5 zone definitions with ranges, scores, and labels"",
                    ""structure"": {
                        ""zone_object"": {
                            ""range"": ""string - boundary definition (e.g., '<6', '6-6.9', '7-9', '9.1-10', '>10')"",
                            ""score"": ""number - points awarded for this zone (0-100)"",
                            ""label"": ""string - descriptive name for this zone"",
                            ""color"": ""string - optional UI color identifier""
                        }
                    },
                    ""zone_patterns"": {
                        ""optimal_middle"": [
                            {""range"": ""<4"", ""score"": 0, ""label"": ""severely_low""},
                            {""range"": ""4-5.9"", ""score"": 25, ""label"": ""low""},
                            {""range"": ""6-8"", ""score"": 100, ""label"": ""optimal""},
                            {""range"": ""8.1-9.9"", ""score"": 75, ""label"": ""high""},
                            {""range"": "">=10"", ""score"": 25, ""label"": ""excessive""}
                        ],
                        ""optimal_high"": [
                            {""range"": ""<20"", ""score"": 0, ""label"": ""insufficient""},
                            {""range"": ""20-39"", ""score"": 25, ""label"": ""low""},
                            {""range"": ""40-59"", ""score"": 50, ""label"": ""moderate""},
                            {""range"": ""60-79"", ""score"": 75, ""label"": ""good""},
                            {""range"": "">=80"", ""score"": 100, ""label"": ""excellent""}
                        ],
                        ""optimal_low"": [
                            {""range"": ""0"", ""score"": 100, ""label"": ""none""},
                            {""range"": ""1-2"", ""score"": 75, ""label"": ""minimal""},
                            {""range"": ""3-5"", ""score"": 50, ""label"": ""moderate""},
                            {""range"": ""6-10"", ""score"": 25, ""label"": ""high""},
                            {""range"": "">10"", ""score"": 0, ""label"": ""excessive""}
                        ]
                    }
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for zone boundaries and actual values"",
                    ""examples"": [""hours"", ""minutes"", ""servings"", ""mg_dl"", ""bpm"", ""scale_1_10""]
                },
                ""grace_range"": {
                    ""type"": ""boolean"",
                    ""default"": false,
                    ""description"": ""Whether to use graduated scoring near zone boundaries"",
                    ""behavior"": {
                        ""false"": ""Strict zone boundaries - immediate score change at boundary"",
                        ""true"": ""Gradual score transition within grace range near boundaries""
                    }
                },
                ""boundary_handling"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""strict"", ""graduated""],
                    ""default"": ""strict"",
                    ""description"": ""How zone boundary transitions are handled"",
                    ""handling_types"": {
                        ""strict"": ""Immediate score change at exact boundary"",
                        ""graduated"": ""Smooth transition using interpolation near boundaries""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day zone evaluation"",
                    ""examples"": [""daily"", ""optimal zone 5 of 7 days"", ""avoid red zone all week""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the 5-tier zone scoring configuration""
                }
            },
            ""zone_scoring_logic"": {
                ""step_1"": ""Data aggregation: Apply calculation_method to tracked_metrics"",
                ""step_2"": ""Zone identification: Determine which of 5 zones actual_value falls into"",
                ""step_3"": ""Boundary handling: Apply strict or graduated scoring based on boundary_handling"",
                ""step_4"": ""Grace range: Apply smooth transitions if grace_range enabled"",
                ""step_5"": ""Final score: Return zone score with any boundary adjustments""
            },
            ""field_relationships"": {
                ""goal_type_zone_mapping"": {
                    ""reduction + countdown"": ""Lower zones = better scores, ring shows zone danger level"",
                    ""buildup + buildup"": ""Higher zones = better scores, ring shows zone achievement"",
                    ""assessment + measurement"": ""Optimal zones defined explicitly, ring shows zone quality""
                },
                ""zone_boundary_alignment"": {
                    ""zones"": ""Must define exactly 5 contiguous zones covering full measurement range"",
                    ""units"": ""Must match measurement_type and tracked_metrics units"",
                    ""boundary_handling"": ""Affects score calculation at zone edges"",
                    ""grace_range"": ""Provides smoothing for boundary_handling""
                }
            },
            ""validation_rules"": [
                ""zones array must contain exactly 5 zone objects"",
                ""zone ranges must be contiguous and cover full expected measurement range"",
                ""zone scores must be numbers between 0-100"",
                ""zone labels must be unique within the configuration"",
                ""units must match expected measurement_type format"",
                ""boundary_handling and grace_range must be compatible"",
                ""tracked_metrics must contain valid field references for calculation_method""
            ],
            ""use_case_examples"": {
                ""sleep_duration_assessment"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""daily"",
                    ""measurement_type"": ""duration"",
                    ""calculation_method"": ""difference"",
                    ""tracked_metrics"": {
                        ""end_field"": ""wake_time"",
                        ""start_field"": ""sleep_time""
                    },
                    ""zones"": [
                        {""range"": ""<6"", ""score"": 0, ""label"": ""insufficient""},
                        {""range"": ""6-6.9"", ""score"": 50, ""label"": ""low""},
                        {""range"": ""7-9"", ""score"": 100, ""label"": ""optimal""},
                        {""range"": ""9.1-10"", ""score"": 75, ""label"": ""excessive""},
                        {""range"": "">10"", ""score"": 25, ""label"": ""very_excessive""}
                    ],
                    ""units"": ""hours"",
                    ""user_experience"": ""Ring color reflects sleep quality - green for 7-9 hours, amber for 6-7 or 9-10, red for <6 or >10""
                },
                ""exercise_intensity_buildup"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""daily"",
                    ""measurement_type"": ""duration"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""vigorous_exercise_minutes"",
                    ""zones"": [
                        {""range"": ""0"", ""score"": 0, ""label"": ""none""},
                        {""range"": ""1-14"", ""score"": 25, ""label"": ""minimal""},
                        {""range"": ""15-29"", ""score"": 50, ""label"": ""moderate""},
                        {""range"": ""30-59"", ""score"": 75, ""label"": ""good""},
                        {""range"": "">=60"", ""score"": 100, ""label"": ""excellent""}
                    ],
                    ""units"": ""minutes"",
                    ""user_experience"": ""Ring builds up through zones - red for 0, amber progression, green for 60+ minutes""
                },
                ""blood_pressure_reduction"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""daily"",
                    ""measurement_type"": ""scale"",
                    ""calculation_method"": ""average"",
                    ""tracked_metrics"": ""systolic_bp"",
                    ""zones"": [
                        {""range"": ""<120"", ""score"": 100, ""label"": ""normal""},
                        {""range"": ""120-129"", ""score"": 75, ""label"": ""elevated""},
                        {""range"": ""130-139"", ""score"": 50, ""label"": ""stage_1""},
                        {""range"": ""140-179"", ""score"": 25, ""label"": ""stage_2""},
                        {""range"": "">=180"", ""score"": 0, ""label"": ""crisis""}
                    ],
                    ""units"": ""mmhg"",
                    ""user_experience"": ""Ring starts full for normal BP, depletes with higher readings showing health risk zones""
                }
            },
            ""zone_visualization_patterns"": {
                ""color_schemes"": {
                    ""optimal_middle"": [""red"", ""orange"", ""green"", ""orange"", ""red""],
                    ""optimal_high"": [""red"", ""orange"", ""yellow"", ""light-green"", ""green""],
                    ""optimal_low"": [""green"", ""light-green"", ""yellow"", ""orange"", ""red""],
                    ""assessment_gradient"": [""purple"", ""blue"", ""green"", ""yellow"", ""red""]
                },
                ""ring_behaviors"": {
                    ""zone_color_fill"": ""Ring takes color of current zone"",
                    ""zone_progress_segment"": ""Ring divided into 5 segments, current zone highlighted"",
                    ""zone_gradient_fill"": ""Ring shows gradient position within current zone""
                }
            },
            ""boundary_handling_examples"": {
                ""strict_boundary"": {
                    ""boundary_handling"": ""strict"",
                    ""grace_range"": false,
                    ""behavior"": ""7.0 hours = optimal zone (100 points), 6.9 hours = low zone (50 points)""
                },
                ""graduated_boundary"": {
                    ""boundary_handling"": ""graduated"",
                    ""grace_range"": true,
                    ""behavior"": ""6.9-7.1 hours = interpolated scoring between low and optimal zones""
                }
            }
        }","Zone-based scoring with 5 performance tiers, evaluated daily and averaged over period. Use when there are optimal ranges with diminishing returns on either side.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#5-zone-5-tier-daily-sc-zone-5tier-daily,"sleep duration where both too little and too much are suboptimal, averaged over time",,checked,
SC-ZONE-5TIER-FREQUENCY,5-Tier Zone Frequency Window,zone_based,"{
            ""method"": ""zone_based"",
            ""formula"": ""score based on which zone actual_value falls into"",
            ""evaluation_pattern"": ""frequency"",
            ""tier_count"": 5,
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""frequency_requirement"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""zones"",
                ""units""
            ],
            ""optional_fields"": [
                ""grace_range"",
                ""boundary_handling"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""frequency_zone_examples"": {
                        ""reduction"": ""Blood pressure in optimal zone 6 of 7 days, alcohol in safe zone weekly"",
                        ""buildup"": ""Exercise intensity in target zone 5 of 7 days, protein in optimal zone consistently"",
                        ""assessment"": ""Sleep quality in optimal zone most nights, mood in good zone 80% of time""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How zone frequency progress is visualized in UI"",
                    ""frequency_zone_ui_behavior"": {
                        ""countdown"": ""Shows frequency of staying in safe zones - 'X of Y days in safe range'"",
                        ""buildup"": ""Shows frequency of hitting target zones - 'X of Y days in target zone'"",
                        ""measurement"": ""Shows consistency pattern across zones - 'Zone consistency: X% optimal'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Type of frequency window for zone evaluation"",
                    ""frequency_zone_behavior"": {
                        ""rolling_7_day"": ""Continuous 7-day window with daily zone tracking for consistency"",
                        ""rolling_30_day"": ""Continuous 30-day window for long-term zone pattern analysis"",
                        ""calendar_week"": ""Weekly cycles with zone frequency tracking Monday-Sunday"",
                        ""calendar_month"": ""Monthly cycles with zone consistency evaluation""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring for daily zone classification within frequency window""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Assessment timeframe for zone frequency evaluation"",
                    ""note"": ""Should match period_type for consistent frequency-zone scoring""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""frequency_target"", ""zone_frequency_target""],
                    ""description"": ""How zone frequency success is determined"",
                    ""criteria_types"": {
                        ""frequency_target"": ""X of Y days in optimal zone(s)"",
                        ""zone_frequency_target"": ""Zone distribution pattern across frequency window""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Specific frequency specification with zone context"",
                    ""format_examples"": [
                        ""hit optimal zone on 5 of 7 days"",
                        ""avoid red zone all 7 days"",
                        ""stay in green/yellow zones 6 of 7 days"",
                        ""optimal zone >=80% of days in window""
                    ],
                    ""pattern_types"": {
                        ""optimal_frequency"": ""X days in highest scoring zone(s)"",
                        ""safe_frequency"": ""X days avoiding lowest scoring zone(s)"",
                        ""acceptable_frequency"": ""X days in acceptable zone range"",
                        ""distribution_frequency"": ""Zone distribution requirements across window""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value""],
                    ""description"": ""How daily actual_value is derived for zone classification within frequency window"",
                    ""frequency_zone_usage"": {
                        ""sum"": ""Daily sum for zone classification across frequency window"",
                        ""average"": ""Daily average for consistent zone performance"",
                        ""last_value"": ""End-of-day measurement for zone classification""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for daily zone calculation within frequency evaluation"",
                    ""frequency_zone_examples"": {
                        ""simple_daily_measurement"": ""daily_sleep_hours"",
                        ""simple_daily_scale"": ""daily_mood_rating"",
                        ""complex_daily_calculation"": {
                            ""end_field"": ""daily_wake_time"",
                            ""start_field"": ""daily_sleep_time""
                        }
                    }
                },
                ""zones"": {
                    ""type"": ""array"",
                    ""description"": ""List of 5 zone definitions for daily classification within frequency window"",
                    ""structure"": {
                        ""zone_object"": {
                            ""range"": ""string - boundary definition for daily zone classification"",
                            ""score"": ""number - points awarded for this zone (0-100)"",
                            ""label"": ""string - descriptive name for this zone"",
                            ""frequency_weight"": ""number - optional weight for frequency calculation""
                        }
                    },
                    ""frequency_zone_patterns"": {
                        ""sleep_consistency"": [
                            {""range"": ""<6"", ""score"": 0, ""label"": ""insufficient"", ""frequency_weight"": 0},
                            {""range"": ""6-6.9"", ""score"": 50, ""label"": ""low"", ""frequency_weight"": 0.5},
                            {""range"": ""7-9"", ""score"": 100, ""label"": ""optimal"", ""frequency_weight"": 1.0},
                            {""range"": ""9.1-10"", ""score"": 75, ""label"": ""excessive"", ""frequency_weight"": 0.75},
                            {""range"": "">10"", ""score"": 25, ""label"": ""very_excessive"", ""frequency_weight"": 0.25}
                        ],
                        ""exercise_frequency"": [
                            {""range"": ""0"", ""score"": 0, ""label"": ""none"", ""frequency_weight"": 0},
                            {""range"": ""1-14"", ""score"": 25, ""label"": ""minimal"", ""frequency_weight"": 0.25},
                            {""range"": ""15-29"", ""score"": 50, ""label"": ""moderate"", ""frequency_weight"": 0.5},
                            {""range"": ""30-59"", ""score"": 75, ""label"": ""good"", ""frequency_weight"": 0.75},
                            {""range"": "">=60"", ""score"": 100, ""label"": ""excellent"", ""frequency_weight"": 1.0}
                        ]
                    }
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for daily zone boundaries and actual values"",
                    ""examples"": [""hours"", ""minutes"", ""servings"", ""mg_dl"", ""bpm"", ""scale_1_10""]
                },
                ""grace_range"": {
                    ""type"": ""boolean"",
                    ""default"": false,
                    ""description"": ""Whether to use graduated scoring near daily zone boundaries"",
                    ""frequency_behavior"": {
                        ""false"": ""Strict daily zone classification for frequency counting"",
                        ""true"": ""Gradual daily zone transitions affecting frequency quality""
                    }
                },
                ""boundary_handling"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""strict"", ""graduated""],
                    ""default"": ""strict"",
                    ""description"": ""How daily zone boundary transitions are handled for frequency evaluation"",
                    ""frequency_handling_types"": {
                        ""strict"": ""Clean daily zone assignment for frequency counting"",
                        ""graduated"": ""Smooth daily zone transitions with weighted frequency contribution""
                    }
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the 5-tier zone frequency scoring configuration""
                }
            },
            ""zone_frequency_scoring_logic"": {
                ""step_1"": ""Daily zone evaluation: Apply calculation_method to tracked_metrics for each day"",
                ""step_2"": ""Daily zone classification: Determine which of 5 zones daily_actual_value falls into"",
                ""step_3"": ""Daily boundary handling: Apply strict or graduated scoring for daily zone assignment"",
                ""step_4"": ""Frequency pattern assessment: Evaluate daily zone assignments against frequency_requirement"",
                ""step_5"": ""Final score: Based on zone frequency pattern achievement""
            },
            ""field_relationships"": {
                ""goal_type_frequency_zone_mapping"": {
                    ""reduction + countdown"": ""Track frequency of staying in safe/low zones"",
                    ""buildup + buildup"": ""Track frequency of achieving target/high zones"",
                    ""assessment + measurement"": ""Track consistency of optimal zone performance""
                },
                ""frequency_zone_alignment"": {
                    ""period_type"": ""Frequency window for zone pattern evaluation"",
                    ""evaluation_period"": ""Technical scoring window (should match period_type)"",
                    ""frequency_requirement"": ""Zone pattern specification within the window"",
                    ""zones"": ""Daily zone classification framework"",
                    ""note"": ""All components must align for coherent frequency-zone scoring""
                }
            },
            ""validation_rules"": [
                ""zones array must contain exactly 5 zone objects"",
                ""zone ranges must be contiguous and cover full expected daily measurement range"",
                ""zone scores must be numbers between 0-100"",
                ""frequency_requirement must specify achievable zone pattern within evaluation window"",
                ""goal_type and progress_direction must be logically consistent"",
                ""period_type and evaluation_period should match for frequency patterns"",
                ""tracked_metrics must contain valid daily measurement fields"",
                ""units must match expected measurement_type format""
            ],
            ""use_case_examples"": {
                ""sleep_consistency_assessment"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""rolling_7_day"",
                    ""measurement_type"": ""duration"",
                    ""calculation_method"": ""difference"",
                    ""tracked_metrics"": {
                        ""end_field"": ""daily_wake_time"",
                        ""start_field"": ""daily_sleep_time""
                    },
                    ""zones"": [
                        {""range"": ""<6"", ""score"": 0, ""label"": ""insufficient""},
                        {""range"": ""6-6.9"", ""score"": 50, ""label"": ""low""},
                        {""range"": ""7-9"", ""score"": 100, ""label"": ""optimal""},
                        {""range"": ""9.1-10"", ""score"": 75, ""label"": ""excessive""},
                        {""range"": "">10"", ""score"": 25, ""label"": ""very_excessive""}
                    ],
                    ""frequency_requirement"": ""optimal zone (7-9 hours) on 5 of 7 nights"",
                    ""units"": ""hours"",
                    ""user_experience"": ""Sleep consistency tracking - need 5 nights with 7-9 hours sleep in rolling 7-day window""
                },
                ""exercise_intensity_buildup"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""calendar_week"",
                    ""measurement_type"": ""duration"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_vigorous_exercise_minutes"",
                    ""zones"": [
                        {""range"": ""0"", ""score"": 0, ""label"": ""none""},
                        {""range"": ""1-14"", ""score"": 25, ""label"": ""minimal""},
                        {""range"": ""15-29"", ""score"": 50, ""label"": ""moderate""},
                        {""range"": ""30-59"", ""score"": 75, ""label"": ""good""},
                        {""range"": "">=60"", ""score"": 100, ""label"": ""excellent""}
                    ],
                    ""frequency_requirement"": ""good or excellent zone (30+ minutes) on 4 of 7 days"",
                    ""units"": ""minutes"",
                    ""user_experience"": ""Weekly exercise habit - need 4 days with 30+ minutes vigorous exercise""
                },
                ""blood_pressure_control"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""rolling_7_day"",
                    ""measurement_type"": ""scale"",
                    ""calculation_method"": ""average"",
                    ""tracked_metrics"": ""daily_systolic_bp"",
                    ""zones"": [
                        {""range"": ""<120"", ""score"": 100, ""label"": ""normal""},
                        {""range"": ""120-129"", ""score"": 75, ""label"": ""elevated""},
                        {""range"": ""130-139"", ""score"": 50, ""label"": ""stage_1""},
                        {""range"": ""140-179"", ""score"": 25, ""label"": ""stage_2""},
                        {""range"": "">=180"", ""score"": 0, ""label"": ""crisis""}
                    ],
                    ""frequency_requirement"": ""stay in normal/elevated zones (under 130) 6 of 7 days"",
                    ""units"": ""mmhg"",
                    ""user_experience"": ""Blood pressure control - maintain readings under 130 for 6 of 7 days""
                }
            },
            ""frequency_zone_scoring_variations"": {
                ""optimal_zone_frequency"": {
                    ""frequency_requirement"": ""optimal zone on X of Y days"",
                    ""behavior"": ""Only highest scoring zone counts toward frequency requirement""
                },
                ""acceptable_zone_frequency"": {
                    ""frequency_requirement"": ""acceptable zones (score >=50) on X of Y days"",
                    ""behavior"": ""Multiple zones with adequate scores count toward frequency""
                },
                ""avoid_zone_frequency"": {
                    ""frequency_requirement"": ""avoid red zone all Y days"",
                    ""behavior"": ""Success requires staying out of lowest scoring zone entirely""
                },
                ""weighted_zone_frequency"": {
                    ""frequency_requirement"": ""average zone quality >=75% over window"",
                    ""behavior"": ""All daily zone scores contribute to window average for final scoring""
                }
            },
            ""ui_complexity_considerations"": {
                ""daily_zone_display"": ""Show daily zone classification with color coding"",
                ""frequency_progress_display"": ""Show zone frequency achievement (3 of 5 optimal days)"",
                ""window_zone_pattern"": ""Show zone distribution across window (5 optimal, 1 good, 1 low)"",
                ""zone_streak_tracking"": ""Show consecutive days in target zones"",
                ""zone_history_visualization"": ""Color-coded calendar showing daily zones over time""
            },
            ""advanced_frequency_patterns"": {
                ""consecutive_zone_streaks"": {
                    ""frequency_requirement"": ""5 consecutive days in optimal zone"",
                    ""behavior"": ""Streak-based zone frequency requiring unbroken optimal performance""
                },
                ""zone_distribution_requirements"": {
                    ""frequency_requirement"": "">=5 optimal, <=1 red zone days per week"",
                    ""behavior"": ""Multiple zone criteria within single frequency window""
                },
                ""progressive_zone_improvement"": {
                    ""frequency_requirement"": ""improve average zone score each week"",
                    ""behavior"": ""Zone frequency tracking with progressive improvement targets""
                }
            }
        }","Zone-based scoring with 5 performance tiers, evaluated based on hitting optimal zone frequency within a trailing 7-day window. Use when optimal ranges matter AND frequency consistency is important.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#6-zone-5-tier-frequency-sc-zone-5tier-frequency,sleep 7-9 hours on 5 of 7 nights,"REC0004.2,REC0004.1",checked,
SC-ZONE-3TIER-DAILY,3-Tier Zone Daily Scoring,zone_based,"{
            ""method"": ""zone_based"",
            ""formula"": ""score based on which zone actual_value falls into"",
            ""evaluation_pattern"": ""daily"",
            ""tier_count"": 3,
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""zones"",
                ""units""
            ],
            ""optional_fields"": [
                ""grace_range"",
                ""boundary_handling"",
                ""frequency_requirement"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""simple_zone_examples"": {
                        ""reduction"": ""Simple calorie limits, basic alcohol control with red/yellow/green zones"",
                        ""buildup"": ""Basic exercise targets, simple hydration goals with progress zones"",
                        ""assessment"": ""Simple mood tracking, basic energy levels with 3-tier assessment""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How 3-tier zone progress is visualized in UI"",
                    ""simple_zone_ui_behavior"": {
                        ""countdown"": ""Ring color reflects simple status - green safe, yellow caution, red danger"",
                        ""buildup"": ""Ring color reflects simple progress - red low, yellow moderate, green target"",
                        ""measurement"": ""Ring color reflects simple assessment - red poor, yellow fair, green good""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Type of evaluation period for simple zone-based scoring"",
                    ""simple_zone_behavior"": {
                        ""daily"": ""Fresh 3-tier zone evaluation each day at 00:00"",
                        ""calendar_week"": ""Weekly simple zone pattern tracking reset Monday"",
                        ""rolling_7_day"": ""Continuous 7-day simple zone performance averaging"",
                        ""rolling_30_day"": ""Continuous 30-day simple zone trend analysis""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring for simple zone classification"",
                    ""simple_zone_context"": ""Determines how actual_value is aggregated for 3-tier zone boundary evaluation""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Assessment timeframe for simple zone-based scoring calculation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""simple_target"", ""optimal_zone_target""],
                    ""description"": ""How simple zone-based success is determined"",
                    ""simple_criteria_types"": {
                        ""simple_target"": ""Highest scoring zone = success (typically green zone)"",
                        ""optimal_zone_target"": ""Specific target zone defined for success""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value""],
                    ""description"": ""How actual_value is derived for simple zone classification"",
                    ""simple_zone_usage"": {
                        ""sum"": ""Total aggregation for 3-tier zone boundary evaluation"",
                        ""average"": ""Average performance for simple zone classification"",
                        ""last_value"": ""Most recent measurement for current zone status""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for simple zone calculation"",
                    ""simple_zone_examples"": {
                        ""simple_measurement"": ""daily_water_glasses"",
                        ""simple_scale"": ""energy_level_1_10"",
                        ""simple_calculation"": {
                            ""primary_field"": ""steps_today"",
                            ""target_field"": ""step_goal""
                        }
                    }
                },
                ""zones"": {
                    ""type"": ""array"",
                    ""description"": ""List of exactly 3 zone definitions with ranges, scores, and labels"",
                    ""structure"": {
                        ""zone_object"": {
                            ""range"": ""string - boundary definition (e.g., '<5000', '5000-9999', '>=10000')"",
                            ""score"": ""number - points awarded for this zone (0-100)"",
                            ""label"": ""string - descriptive name for this zone"",
                            ""color"": ""string - UI color identifier (red, yellow, green)""
                        }
                    },
                    ""simple_zone_patterns"": {
                        ""low_medium_high"": [
                            {""range"": ""<50"", ""score"": 25, ""label"": ""low"", ""color"": ""red""},
                            {""range"": ""50-79"", ""score"": 65, ""label"": ""moderate"", ""color"": ""yellow""},
                            {""range"": "">=80"", ""score"": 100, ""label"": ""high"", ""color"": ""green""}
                        ],
                        ""poor_fair_good"": [
                            {""range"": ""1-3"", ""score"": 25, ""label"": ""poor"", ""color"": ""red""},
                            {""range"": ""4-6"", ""score"": 65, ""label"": ""fair"", ""color"": ""yellow""},
                            {""range"": ""7-10"", ""score"": 100, ""label"": ""good"", ""color"": ""green""}
                        ],
                        ""under_target_over"": [
                            {""range"": ""<target"", ""score"": 50, ""label"": ""under"", ""color"": ""red""},
                            {""range"": ""target"", ""score"": 100, ""label"": ""target"", ""color"": ""green""},
                            {""range"": "">target"", ""score"": 75, ""label"": ""over"", ""color"": ""yellow""}
                        ]
                    }
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for zone boundaries and actual values"",
                    ""examples"": [""glasses"", ""steps"", ""minutes"", ""bpm"", ""scale_1_10"", ""servings""]
                },
                ""grace_range"": {
                    ""type"": ""boolean"",
                    ""default"": false,
                    ""description"": ""Whether to use graduated scoring near simple zone boundaries"",
                    ""simple_behavior"": {
                        ""false"": ""Clean zone transitions - red/yellow/green with clear boundaries"",
                        ""true"": ""Smooth zone transitions with blended colors near boundaries""
                    }
                },
                ""boundary_handling"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""strict"", ""graduated""],
                    ""default"": ""strict"",
                    ""description"": ""How simple zone boundary transitions are handled"",
                    ""simple_handling_types"": {
                        ""strict"": ""Immediate zone change at exact boundary (clean red/yellow/green)"",
                        ""graduated"": ""Smooth transition using interpolation near zone boundaries""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day simple zone evaluation"",
                    ""simple_examples"": [""daily"", ""green zone 5 of 7 days"", ""avoid red zone all week""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the 3-tier zone scoring configuration""
                }
            },
            ""simple_zone_scoring_logic"": {
                ""step_1"": ""Data aggregation: Apply calculation_method to tracked_metrics"",
                ""step_2"": ""Zone identification: Determine which of 3 zones actual_value falls into"",
                ""step_3"": ""Boundary handling: Apply strict or graduated scoring based on boundary_handling"",
                ""step_4"": ""Grace range: Apply smooth transitions if grace_range enabled"",
                ""step_5"": ""Final score: Return zone score with any boundary adjustments""
            },
            ""field_relationships"": {
                ""goal_type_simple_zone_mapping"": {
                    ""reduction + countdown"": ""Green = safe, yellow = caution, red = danger zones"",
                    ""buildup + buildup"": ""Red = insufficient, yellow = progress, green = target achieved"",
                    ""assessment + measurement"": ""Red = poor, yellow = fair, green = good performance""
                },
                ""simple_zone_boundary_alignment"": {
                    ""zones"": ""Must define exactly 3 contiguous zones covering full measurement range"",
                    ""units"": ""Must match measurement_type and tracked_metrics units"",
                    ""boundary_handling"": ""Affects score calculation at zone edges"",
                    ""grace_range"": ""Provides smoothing for boundary_handling""
                }
            },
            ""validation_rules"": [
                ""zones array must contain exactly 3 zone objects"",
                ""zone ranges must be contiguous and cover expected measurement range"",
                ""zone scores must be numbers between 0-100"",
                ""zone labels must be unique within the configuration"",
                ""units must match expected measurement_type format"",
                ""boundary_handling and grace_range must be compatible"",
                ""tracked_metrics must contain valid field references for calculation_method""
            ],
            ""use_case_examples"": {
                ""daily_water_intake"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""daily"",
                    ""measurement_type"": ""count"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""water_glasses"",
                    ""zones"": [
                        {""range"": ""<4"", ""score"": 25, ""label"": ""insufficient"", ""color"": ""red""},
                        {""range"": ""4-7"", ""score"": 65, ""label"": ""moderate"", ""color"": ""yellow""},
                        {""range"": "">=8"", ""score"": 100, ""label"": ""optimal"", ""color"": ""green""}
                    ],
                    ""units"": ""glasses"",
                    ""user_experience"": ""Ring starts red, turns yellow at 4 glasses, green at 8+ glasses""
                },
                ""daily_step_goal"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""daily"",
                    ""measurement_type"": ""count"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_steps"",
                    ""zones"": [
                        {""range"": ""<5000"", ""score"": 25, ""label"": ""sedentary"", ""color"": ""red""},
                        {""range"": ""5000-9999"", ""score"": 65, ""label"": ""active"", ""color"": ""yellow""},
                        {""range"": "">=10000"", ""score"": 100, ""label"": ""very_active"", ""color"": ""green""}
                    ],
                    ""units"": ""steps"",
                    ""user_experience"": ""Simple step tracking - red below 5k, yellow 5k-10k, green 10k+""
                },
                ""mood_assessment"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""daily"",
                    ""measurement_type"": ""scale"",
                    ""calculation_method"": ""last_value"",
                    ""tracked_metrics"": ""mood_rating_1_10"",
                    ""zones"": [
                        {""range"": ""1-4"", ""score"": 25, ""label"": ""low"", ""color"": ""red""},
                        {""range"": ""5-7"", ""score"": 65, ""label"": ""neutral"", ""color"": ""yellow""},
                        {""range"": ""8-10"", ""score"": 100, ""label"": ""high"", ""color"": ""green""}
                    ],
                    ""units"": ""scale_1_10"",
                    ""user_experience"": ""Simple mood tracking - red for low mood, yellow neutral, green positive""
                }
            },
            ""simple_zone_advantages"": {
                ""user_experience"": {
                    ""cognitive_simplicity"": ""Easy to understand red/yellow/green system"",
                    ""clear_boundaries"": ""Obvious targets and danger zones"",
                    ""quick_assessment"": ""Instant visual feedback without complexity""
                },
                ""implementation_benefits"": {
                    ""reduced_complexity"": ""Simpler logic than 5-tier systems"",
                    ""faster_processing"": ""Fewer boundary calculations"",
                    ""clearer_messaging"": ""Straightforward success/caution/failure states""
                }
            },
            ""zone_visualization_patterns"": {
                ""classic_traffic_light"": {
                    ""colors"": [""red"", ""yellow"", ""green""],
                    ""meaning"": ""Stop/Caution/Go progression"",
                    ""usage"": ""Most intuitive for general audiences""
                },
                ""performance_gradient"": {
                    ""colors"": [""red"", ""orange"", ""green""],
                    ""meaning"": ""Poor/Improving/Good performance"",
                    ""usage"": ""Better for buildup/achievement goals""
                },
                ""assessment_scale"": {
                    ""colors"": [""red"", ""blue"", ""green""],
                    ""meaning"": ""Below/At/Above expectations"",
                    ""usage"": ""Suitable for assessment/measurement goals""
                }
            },
            ""simple_vs_complex_zone_guidance"": {
                ""use_3_tier_when"": [
                    ""Users need simple, clear feedback"",
                    ""Goal has obvious good/bad/moderate states"",
                    ""Reducing cognitive load is priority"",
                    ""Binary thinking with moderate middle option works""
                ],
                ""use_5_tier_when"": [
                    ""More nuanced feedback needed"",
                    ""Goal has complex optimal ranges"", 
                    ""Users want detailed performance tracking"",
                    ""Medical/health metrics with clinical ranges""
                ]
            }
        }","Zone-based scoring with 3 performance tiers, evaluated daily and averaged over period. Use for simpler optimal range scenarios.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#7-zone-3-tier-daily-sc-zone-3tier-daily,"blood pressure zones (low/normal/high), averaged over time",,checked,
SC-ZONE-3TIER-FREQUENCY,3-Tier Zone Frequency Window,zone_based,"{
            ""method"": ""zone_based"",
            ""formula"": ""score based on which zone actual_value falls into"",
            ""evaluation_pattern"": ""frequency"",
            ""tier_count"": 3,
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""frequency_requirement"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""zones"",
                ""units""
            ],
            ""optional_fields"": [
                ""grace_range"",
                ""boundary_handling"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""simple_frequency_zone_examples"": {
                        ""reduction"": ""Stay in safe zones most days - alcohol limits, calorie control with simple frequency"",
                        ""buildup"": ""Hit target zones consistently - exercise goals, hydration with simple frequency tracking"",
                        ""assessment"": ""Maintain good zones regularly - mood consistency, energy level frequency patterns""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How 3-tier zone frequency progress is visualized in UI"",
                    ""simple_frequency_zone_ui_behavior"": {
                        ""countdown"": ""Shows frequency of staying safe - 'X of Y days in green zone'"",
                        ""buildup"": ""Shows frequency of hitting targets - 'X of Y days in target zone'"",
                        ""measurement"": ""Shows consistency pattern - 'X of Y days in good zone'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Type of frequency window for simple zone evaluation"",
                    ""simple_frequency_zone_behavior"": {
                        ""rolling_7_day"": ""Continuous 7-day window with simple daily zone tracking"",
                        ""rolling_30_day"": ""Continuous 30-day window for simple long-term zone patterns"",
                        ""calendar_week"": ""Weekly cycles with simple zone frequency Monday-Sunday"",
                        ""calendar_month"": ""Monthly cycles with simple zone consistency evaluation""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""duration"", ""count"", ""binary"", ""scale""],
                    ""description"": ""What we're measuring for daily simple zone classification within frequency window""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Assessment timeframe for simple zone frequency evaluation"",
                    ""note"": ""Should match period_type for consistent simple frequency-zone scoring""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""frequency_target"", ""simple_frequency_target""],
                    ""description"": ""How simple zone frequency success is determined"",
                    ""simple_criteria_types"": {
                        ""frequency_target"": ""X of Y days in optimal zone (green)"",
                        ""simple_frequency_target"": ""Simple frequency pattern across 3 zones""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Specific frequency specification with simple zone context"",
                    ""simple_format_examples"": [
                        ""hit green zone on 5 of 7 days"",
                        ""avoid red zone all 7 days"",
                        ""stay in green/yellow zones 6 of 7 days"",
                        ""green zone >=80% of days in window""
                    ],
                    ""simple_pattern_types"": {
                        ""green_frequency"": ""X days in optimal/target zone (green)"",
                        ""safe_frequency"": ""X days avoiding danger zone (stay out of red)"",
                        ""acceptable_frequency"": ""X days in acceptable zones (green or yellow)"",
                        ""avoidance_frequency"": ""Complete avoidance of red zone""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""average"", ""difference"", ""count"", ""max"", ""min"", ""last_value""],
                    ""description"": ""How daily actual_value is derived for simple zone classification within frequency window"",
                    ""simple_frequency_zone_usage"": {
                        ""sum"": ""Daily sum for simple zone classification across frequency window"",
                        ""average"": ""Daily average for simple zone performance consistency"",
                        ""last_value"": ""End-of-day measurement for daily simple zone classification""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object|string"",
                    ""description"": ""Field mappings for daily simple zone calculation within frequency evaluation"",
                    ""simple_frequency_zone_examples"": {
                        ""simple_daily_count"": ""daily_water_glasses"",
                        ""simple_daily_scale"": ""daily_energy_rating"",
                        ""simple_daily_duration"": ""daily_exercise_minutes""
                    }
                },
                ""zones"": {
                    ""type"": ""array"",
                    ""description"": ""List of exactly 3 zone definitions for daily classification within frequency window"",
                    ""structure"": {
                        ""zone_object"": {
                            ""range"": ""string - boundary definition for daily zone classification"",
                            ""score"": ""number - points awarded for this zone (0-100)"",
                            ""label"": ""string - descriptive name for this zone"",
                            ""color"": ""string - UI color identifier (red, yellow, green)"",
                            ""frequency_weight"": ""number - optional weight for frequency calculation""
                        }
                    },
                    ""simple_frequency_zone_patterns"": {
                        ""water_intake_consistency"": [
                            {""range"": ""<4"", ""score"": 25, ""label"": ""insufficient"", ""color"": ""red"", ""frequency_weight"": 0},
                            {""range"": ""4-7"", ""score"": 65, ""label"": ""moderate"", ""color"": ""yellow"", ""frequency_weight"": 0.5},
                            {""range"": "">=8"", ""score"": 100, ""label"": ""optimal"", ""color"": ""green"", ""frequency_weight"": 1.0}
                        ],
                        ""exercise_frequency"": [
                            {""range"": ""0"", ""score"": 0, ""label"": ""none"", ""color"": ""red"", ""frequency_weight"": 0},
                            {""range"": ""1-29"", ""score"": 50, ""label"": ""some"", ""color"": ""yellow"", ""frequency_weight"": 0.5},
                            {""range"": "">=30"", ""score"": 100, ""label"": ""target"", ""color"": ""green"", ""frequency_weight"": 1.0}
                        ],
                        ""mood_consistency"": [
                            {""range"": ""1-4"", ""score"": 25, ""label"": ""low"", ""color"": ""red"", ""frequency_weight"": 0},
                            {""range"": ""5-7"", ""score"": 65, ""label"": ""neutral"", ""color"": ""yellow"", ""frequency_weight"": 0.5},
                            {""range"": ""8-10"", ""score"": 100, ""label"": ""positive"", ""color"": ""green"", ""frequency_weight"": 1.0}
                        ]
                    }
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for daily zone boundaries and actual values"",
                    ""examples"": [""glasses"", ""minutes"", ""steps"", ""scale_1_10"", ""servings"", ""hours""]
                },
                ""grace_range"": {
                    ""type"": ""boolean"",
                    ""default"": false,
                    ""description"": ""Whether to use graduated scoring near daily simple zone boundaries"",
                    ""simple_frequency_behavior"": {
                        ""false"": ""Clean daily zone classification for simple frequency counting"",
                        ""true"": ""Smooth daily zone transitions affecting frequency quality""
                    }
                },
                ""boundary_handling"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""strict"", ""graduated""],
                    ""default"": ""strict"",
                    ""description"": ""How daily simple zone boundary transitions are handled for frequency evaluation"",
                    ""simple_frequency_handling_types"": {
                        ""strict"": ""Clean daily zone assignment for simple frequency counting"",
                        ""graduated"": ""Smooth daily zone transitions with weighted frequency contribution""
                    }
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the 3-tier zone frequency scoring configuration""
                }
            },
            ""simple_zone_frequency_scoring_logic"": {
                ""step_1"": ""Daily zone evaluation: Apply calculation_method to tracked_metrics for each day"",
                ""step_2"": ""Daily simple zone classification: Determine which of 3 zones daily_actual_value falls into"",
                ""step_3"": ""Daily boundary handling: Apply strict or graduated scoring for daily zone assignment"",
                ""step_4"": ""Frequency pattern assessment: Evaluate daily zone assignments against frequency_requirement"",
                ""step_5"": ""Final score: Based on simple zone frequency pattern achievement""
            },
            ""field_relationships"": {
                ""goal_type_simple_frequency_zone_mapping"": {
                    ""reduction + countdown"": ""Track frequency of staying in safe zones (green/yellow)"",
                    ""buildup + buildup"": ""Track frequency of achieving target zones (green)"",
                    ""assessment + measurement"": ""Track consistency of good zone performance (green/yellow)""
                },
                ""simple_frequency_zone_alignment"": {
                    ""period_type"": ""Frequency window for simple zone pattern evaluation"",
                    ""evaluation_period"": ""Technical scoring window (should match period_type)"",
                    ""frequency_requirement"": ""Simple zone pattern specification within the window"",
                    ""zones"": ""Daily simple zone classification framework (exactly 3 zones)"",
                    ""note"": ""All components must align for coherent simple frequency-zone scoring""
                }
            },
            ""validation_rules"": [
                ""zones array must contain exactly 3 zone objects"",
                ""zone ranges must be contiguous and cover expected daily measurement range"",
                ""zone scores must be numbers between 0-100"",
                ""zone colors should follow intuitive pattern (red=poor, yellow=moderate, green=good)"",
                ""frequency_requirement must specify achievable simple zone pattern within evaluation window"",
                ""goal_type and progress_direction must be logically consistent"",
                ""period_type and evaluation_period should match for frequency patterns"",
                ""tracked_metrics must contain valid daily measurement fields"",
                ""units must match expected measurement_type format""
            ],
            ""use_case_examples"": {
                ""water_intake_consistency"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""calendar_week"",
                    ""measurement_type"": ""count"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_water_glasses"",
                    ""zones"": [
                        {""range"": ""<4"", ""score"": 25, ""label"": ""insufficient"", ""color"": ""red""},
                        {""range"": ""4-7"", ""score"": 65, ""label"": ""moderate"", ""color"": ""yellow""},
                        {""range"": "">=8"", ""score"": 100, ""label"": ""optimal"", ""color"": ""green""}
                    ],
                    ""frequency_requirement"": ""green zone (8+ glasses) on 5 of 7 days"",
                    ""units"": ""glasses"",
                    ""user_experience"": ""Weekly hydration habit - need 5 days with 8+ glasses water""
                },
                ""exercise_frequency"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""rolling_7_day"",
                    ""measurement_type"": ""duration"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_exercise_minutes"",
                    ""zones"": [
                        {""range"": ""0"", ""score"": 0, ""label"": ""none"", ""color"": ""red""},
                        {""range"": ""1-29"", ""score"": 50, ""label"": ""some"", ""color"": ""yellow""},
                        {""range"": "">=30"", ""score"": 100, ""label"": ""target"", ""color"": ""green""}
                    ],
                    ""frequency_requirement"": ""green zone (30+ minutes) on 4 of 7 days"",
                    ""units"": ""minutes"",
                    ""user_experience"": ""Exercise consistency - need 4 days with 30+ minutes exercise in rolling week""
                },
                ""mood_stability"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""rolling_7_day"",
                    ""measurement_type"": ""scale"",
                    ""calculation_method"": ""last_value"",
                    ""tracked_metrics"": ""daily_mood_rating_1_10"",
                    ""zones"": [
                        {""range"": ""1-4"", ""score"": 25, ""label"": ""low"", ""color"": ""red""},
                        {""range"": ""5-7"", ""score"": 65, ""label"": ""neutral"", ""color"": ""yellow""},
                        {""range"": ""8-10"", ""score"": 100, ""label"": ""positive"", ""color"": ""green""}
                    ],
                    ""frequency_requirement"": ""avoid red zone (stay 5+) all 7 days"",
                    ""units"": ""scale_1_10"",
                    ""user_experience"": ""Mood stability - maintain rating 5+ for all 7 days (no low mood days)""
                }
            },
            ""simple_frequency_zone_scoring_variations"": {
                ""green_zone_frequency"": {
                    ""frequency_requirement"": ""green zone on X of Y days"",
                    ""behavior"": ""Only optimal zone (green) counts toward frequency requirement""
                },
                ""safe_zone_frequency"": {
                    ""frequency_requirement"": ""green or yellow zones on X of Y days"",
                    ""behavior"": ""Acceptable zones (green/yellow) count toward frequency""
                },
                ""red_zone_avoidance"": {
                    ""frequency_requirement"": ""avoid red zone all Y days"",
                    ""behavior"": ""Success requires staying out of danger zone entirely""
                },
                ""simple_zone_distribution"": {
                    ""frequency_requirement"": "">=5 green, <=1 red zone days per week"",
                    ""behavior"": ""Multiple simple zone criteria within frequency window""
                }
            },
            ""ui_simplicity_considerations"": {
                ""daily_zone_display"": ""Simple color coding - red/yellow/green daily status"",
                ""frequency_progress_display"": ""Simple counting - '3 of 5 green days achieved'"",
                ""window_zone_pattern"": ""Simple distribution - '5 green, 1 yellow, 1 red this week'"",
                ""success_messaging"": ""Clear frequency context - 'Great! 4 target days this week'""
            },
            ""simple_vs_complex_frequency_guidance"": {
                ""use_3_tier_frequency_when"": [
                    ""Users need simple consistency tracking"",
                    ""Goal has clear good/bad/okay daily states"",
                    ""Frequency patterns should be easy to understand"",
                    ""Reducing complexity while maintaining frequency accountability""
                ],
                ""use_5_tier_frequency_when"": [
                    ""More nuanced frequency patterns needed"",
                    ""Complex optimal ranges with detailed frequency tracking"",
                    ""Users want sophisticated consistency measurement"",
                    ""Medical/health metrics requiring detailed frequency analysis""
                ]
            },
            ""frequency_pattern_examples"": {
                ""weekly_habit_building"": {
                    ""pattern"": ""green zone 5 of 7 days"",
                    ""psychology"": ""Build consistent weekly habits with allowance for 2 off days""
                },
                ""streak_maintenance"": {
                    ""pattern"": ""avoid red zone all 7 days"",
                    ""psychology"": ""Maintain minimum standards without any failure days""
                },
                ""flexible_consistency"": {
                    ""pattern"": ""green or yellow zones 6 of 7 days"",
                    ""psychology"": ""Maintain acceptable performance with flexibility for zone level""
                }
            }
        }","Zone-based scoring with 3 performance tiers, evaluated based on hitting optimal zone frequency within a trailing 7-day window. Use for simpler optimal range scenarios where frequency consistency matters.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#8-zone-3-tier-frequency-sc-zone-3tier-frequency,screen time <4 hours on 6 of 7 days,,checked,
SC-COMPOSITE-DAILY,Composite Weighted Daily,composite_weighted,"{
            ""method"": ""composite_weighted"",
            ""formula"": ""weighted average of multiple components evaluated daily"",
            ""evaluation_pattern"": ""daily"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""components"",
                ""units""
            ],
            ""optional_fields"": [
                ""minimum_threshold"",
                ""maximum_cap"",
                ""frequency_requirement"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""composite_examples"": {
                        ""reduction"": ""Multi-factor health risk reduction - BP + weight + cholesterol weighted composite"",
                        ""buildup"": ""Multi-nutrient intake goals - protein + fiber + vitamins weighted achievement"",
                        ""assessment"": ""Holistic wellness scoring - sleep + mood + energy + activity weighted assessment""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How composite weighted progress is visualized in UI"",
                    ""composite_ui_behavior"": {
                        ""countdown"": ""Ring depletes as composite risk factors increase - weighted risk assessment"",
                        ""buildup"": ""Ring fills as composite targets are met - weighted achievement tracking"",
                        ""measurement"": ""Ring shows composite performance quality - weighted holistic assessment""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Type of evaluation period for composite weighted scoring"",
                    ""composite_behavior"": {
                        ""daily"": ""Fresh composite evaluation of all components each day at 00:00"",
                        ""calendar_week"": ""Weekly composite pattern tracking reset Monday"",
                        ""rolling_7_day"": ""Continuous 7-day composite performance averaging"",
                        ""rolling_30_day"": ""Continuous 30-day composite trend analysis""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""composite""],
                    ""description"": ""Fixed as 'composite' - indicates multiple component aggregation"",
                    ""composite_context"": ""Always 'composite' for weighted multi-component scoring""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Assessment timeframe for composite weighted scoring calculation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""simple_target"", ""composite_target"", ""weighted_target""],
                    ""description"": ""How composite weighted success is determined"",
                    ""composite_criteria_types"": {
                        ""simple_target"": ""Overall composite score >= threshold"",
                        ""composite_target"": ""Each component meets individual targets"",
                        ""weighted_target"": ""Weighted composite score meets complex criteria""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""weighted_average"", ""weighted_sum"", ""max"", ""min"", ""custom_formula""],
                    ""description"": ""How composite value is derived from multiple components"",
                    ""composite_calculation_usage"": {
                        ""weighted_average"": ""Sum of (component_score * weight) / sum of weights"",
                        ""weighted_sum"": ""Sum of (component_score * weight) - no normalization"",
                        ""max"": ""Highest performing component score"",
                        ""min"": ""Lowest performing component score (bottleneck)"",
                        ""custom_formula"": ""Complex calculation defined in components""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object"",
                    ""description"": ""Explicit field mappings for all composite components"",
                    ""structure"": {
                        ""component_field_mapping"": {
                            ""component_name"": ""field_name or complex field mapping object"",
                            ""note"": ""Each component must specify how its data is retrieved""
                        }
                    },
                    ""composite_examples"": {
                        ""simple_multi_field"": {
                            ""sleep_quality"": ""sleep_rating_1_10"",
                            ""exercise_duration"": ""daily_exercise_minutes"",
                            ""mood_rating"": ""mood_scale_1_10""
                        },
                        ""complex_multi_field"": {
                            ""sleep_efficiency"": {
                                ""numerator_field"": ""actual_sleep_time"",
                                ""denominator_field"": ""time_in_bed"",
                                ""calculation"": ""percentage""
                            },
                            ""activity_target"": {
                                ""actual_field"": ""daily_steps"",
                                ""target_field"": ""step_goal"",
                                ""calculation"": ""percentage_of_target""
                            }
                        }
                    }
                },
                ""components"": {
                    ""type"": ""array"",
                    ""description"": ""List of component definitions for weighted composite scoring"",
                    ""structure"": {
                        ""component_object"": {
                            ""name"": ""string - unique identifier for this component"",
                            ""weight"": ""number - relative importance (0.1-1.0, must sum to 1.0 across all components)"",
                            ""target"": ""number - optimal target value for this component"",
                            ""unit"": ""string - measurement unit for this component"",
                            ""scoring_method"": ""string - how this component is scored (proportional, binary, zone)"",
                            ""field_name"": ""string - field reference in tracked_metrics"",
                            ""min_value"": ""number - optional minimum bound for component"",
                            ""max_value"": ""number - optional maximum bound for component""
                        }
                    },
                    ""composite_component_patterns"": {
                        ""wellness_assessment"": [
                            {
                                ""name"": ""sleep_quality"",
                                ""weight"": 0.3,
                                ""target"": 8,
                                ""unit"": ""scale_1_10"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""sleep_rating_1_10""
                            },
                            {
                                ""name"": ""exercise_completion"",
                                ""weight"": 0.25,
                                ""target"": 30,
                                ""unit"": ""minutes"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_exercise_minutes""
                            },
                            {
                                ""name"": ""mood_rating"",
                                ""weight"": 0.25,
                                ""target"": 7,
                                ""unit"": ""scale_1_10"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""mood_scale_1_10""
                            },
                            {
                                ""name"": ""nutrition_adherence"",
                                ""weight"": 0.2,
                                ""target"": 100,
                                ""unit"": ""percentage"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""nutrition_target_percentage""
                            }
                        ],
                        ""cardiovascular_health"": [
                            {
                                ""name"": ""blood_pressure"",
                                ""weight"": 0.4,
                                ""target"": 120,
                                ""unit"": ""mmhg"",
                                ""scoring_method"": ""zone"",
                                ""field_name"": ""systolic_bp""
                            },
                            {
                                ""name"": ""resting_heart_rate"",
                                ""weight"": 0.3,
                                ""target"": 60,
                                ""unit"": ""bpm"",
                                ""scoring_method"": ""zone"",
                                ""field_name"": ""resting_hr""
                            },
                            {
                                ""name"": ""activity_level"",
                                ""weight"": 0.3,
                                ""target"": 10000,
                                ""unit"": ""steps"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_steps""
                            }
                        ]
                    }
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Primary unit identifier for composite score (typically 'composite_score' or 'percentage')"",
                    ""examples"": [""composite_score"", ""percentage"", ""wellness_index""]
                },
                ""minimum_threshold"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Minimum composite score for any points"",
                    ""composite_usage"": ""Prevents negative composite scores, sets floor for overall assessment""
                },
                ""maximum_cap"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Maximum composite score cap"",
                    ""composite_usage"": ""Caps composite scores to prevent over-achievement skewing""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day composite evaluation"",
                    ""examples"": [""daily"", ""composite score >=80 on 5 of 7 days"", ""weekly average >=75""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the composite weighted scoring configuration""
                }
            },
            ""composite_weighted_scoring_logic"": {
                ""step_1"": ""Component data retrieval: Get actual values for each component from tracked_metrics"",
                ""step_2"": ""Component scoring: Score each component using its scoring_method (proportional/binary/zone)"",
                ""step_3"": ""Weight application: Apply component weights to individual scores"",
                ""step_4"": ""Composite calculation: Aggregate weighted scores using calculation_method"",
                ""step_5"": ""Bounds application: Apply minimum_threshold and maximum_cap to final composite score""
            },
            ""field_relationships"": {
                ""goal_type_composite_mapping"": {
                    ""reduction + countdown"": ""Weighted risk factor tracking - composite health risks decrease ring"",
                    ""buildup + buildup"": ""Weighted achievement tracking - composite targets fill ring"",
                    ""assessment + measurement"": ""Weighted holistic assessment - composite performance quality""
                },
                ""component_alignment_requirements"": {
                    ""components"": ""Must define all weighted elements with valid field references"",
                    ""tracked_metrics"": ""Must contain field mappings for every component"",
                    ""weights"": ""Must sum to 1.0 across all components for proper normalization"",
                    ""calculation_method"": ""Must be compatible with component scoring methods""
                }
            },
            ""validation_rules"": [
                ""components array must contain at least 2 component objects"",
                ""component weights must sum to exactly 1.0"",
                ""each component must have unique name within configuration"",
                ""each component field_name must exist in tracked_metrics"",
                ""component targets must be positive numbers"",
                ""component scoring_methods must be valid (proportional, binary, zone)"",
                ""tracked_metrics must contain field references for all components"",
                ""minimum_threshold must be >= 0 and <= maximum_cap""
            ],
            ""use_case_examples"": {
                ""daily_wellness_composite"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""daily"",
                    ""calculation_method"": ""weighted_average"",
                    ""components"": [
                        {
                            ""name"": ""sleep_quality"",
                            ""weight"": 0.35,
                            ""target"": 8,
                            ""unit"": ""hours"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""sleep_duration_hours""
                        },
                        {
                            ""name"": ""exercise_completion"",
                            ""weight"": 0.25,
                            ""target"": 30,
                            ""unit"": ""minutes"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_exercise_minutes""
                        },
                        {
                            ""name"": ""mood_rating"",
                            ""weight"": 0.25,
                            ""target"": 8,
                            ""unit"": ""scale_1_10"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""mood_scale_1_10""
                        },
                        {
                            ""name"": ""stress_level"",
                            ""weight"": 0.15,
                            ""target"": 3,
                            ""unit"": ""scale_1_10"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""stress_rating_1_10""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""sleep_duration_hours"": ""sleep_hours"",
                        ""daily_exercise_minutes"": ""exercise_minutes"",
                        ""mood_scale_1_10"": ""mood_rating"",
                        ""stress_rating_1_10"": ""stress_level""
                    },
                    ""user_experience"": ""Holistic daily wellness score combining sleep (35%), exercise (25%), mood (25%), stress (15%)""
                },
                ""nutrition_composite_buildup"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""daily"",
                    ""calculation_method"": ""weighted_average"",
                    ""components"": [
                        {
                            ""name"": ""protein_intake"",
                            ""weight"": 0.4,
                            ""target"": 150,
                            ""unit"": ""grams"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_protein_grams""
                        },
                        {
                            ""name"": ""fiber_intake"",
                            ""weight"": 0.3,
                            ""target"": 25,
                            ""unit"": ""grams"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_fiber_grams""
                        },
                        {
                            ""name"": ""water_intake"",
                            ""weight"": 0.3,
                            ""target"": 8,
                            ""unit"": ""glasses"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_water_glasses""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""daily_protein_grams"": ""protein_total"",
                        ""daily_fiber_grams"": ""fiber_total"",
                        ""daily_water_glasses"": ""water_count""
                    },
                    ""user_experience"": ""Daily nutrition achievement combining protein (40%), fiber (30%), water (30%) targets""
                },
                ""health_risk_composite"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""daily"",
                    ""calculation_method"": ""weighted_average"",
                    ""components"": [
                        {
                            ""name"": ""blood_pressure_risk"",
                            ""weight"": 0.5,
                            ""target"": 120,
                            ""unit"": ""mmhg"",
                            ""scoring_method"": ""zone"",
                            ""field_name"": ""systolic_bp""
                        },
                        {
                            ""name"": ""weight_status"",
                            ""weight"": 0.3,
                            ""target"": 25,
                            ""unit"": ""bmi"",
                            ""scoring_method"": ""zone"",
                            ""field_name"": ""current_bmi""
                        },
                        {
                            ""name"": ""activity_deficit"",
                            ""weight"": 0.2,
                            ""target"": 10000,
                            ""unit"": ""steps"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_steps""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""systolic_bp"": ""blood_pressure_systolic"",
                        ""current_bmi"": ""body_mass_index"",
                        ""daily_steps"": ""step_count""
                    },
                    ""user_experience"": ""Health risk reduction tracking BP (50%), weight (30%), activity (20%) with countdown visualization""
                }
            },
            ""component_scoring_methods"": {
                ""proportional"": {
                    ""description"": ""Linear scoring based on percentage of target achieved"",
                    ""formula"": ""(actual_value / target) * 100"",
                    ""use_case"": ""Intake goals, duration targets, count objectives""
                },
                ""binary"": {
                    ""description"": ""Pass/fail scoring based on threshold achievement"",
                    ""formula"": ""actual_value >= target ? 100 : 0"",
                    ""use_case"": ""Compliance goals, yes/no criteria""
                },
                ""zone"": {
                    ""description"": ""Zone-based scoring with optimal ranges"",
                    ""formula"": ""Score based on which zone actual_value falls into"",
                    ""use_case"": ""Health metrics with optimal ranges (BP, BMI, HR)""
                }
            },
            ""weight_distribution_strategies"": {
                ""equal_weighting"": {
                    ""approach"": ""All components weighted equally (e.g., 0.25 each for 4 components)"",
                    ""use_case"": ""When all factors are equally important""
                },
                ""priority_weighting"": {
                    ""approach"": ""Most important factor gets highest weight (e.g., 0.5, 0.3, 0.2)"",
                    ""use_case"": ""When one factor is clearly most critical""
                },
                ""balanced_weighting"": {
                    ""approach"": ""Moderate differentiation (e.g., 0.35, 0.25, 0.25, 0.15)"",
                    ""use_case"": ""When factors have different but reasonable importance levels""
                }
            },
            ""ui_complexity_considerations"": {
                ""composite_score_display"": ""Show overall weighted score prominently (78% wellness score)"",
                ""component_breakdown"": ""Show individual component scores and weights"",
                ""component_progress_bars"": ""Visual progress for each component toward its target"",
                ""weight_visualization"": ""Show relative importance of each component"",
                ""trend_tracking"": ""Track composite score changes over time""
            }
        }",Composite weighted scoring evaluated daily: combines multiple factors with specified weights each day. Use when recommendation has multiple measurable components that are assessed daily.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#9-composite-weighted-daily-sc-composite-daily,fruit servings (60%) + variety (40%) = weighted daily score,"REC0007.2,REC0007.3,REC0008.2,REC0008.3,REC0011.3,REC0012.2,REC0012.3,REC0016.3",checked,
SC-COMPOSITE-FREQUENCY,Composite Weighted Frequency Window,composite_weighted,"{
            ""method"": ""composite_weighted"",
            ""formula"": ""weighted average of multiple components evaluated daily, then frequency-based success"",
            ""evaluation_pattern"": ""frequency"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""frequency_requirement"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""components"",
                ""units""
            ],
            ""optional_fields"": [
                ""minimum_threshold"",
                ""maximum_cap"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""composite_frequency_examples"": {
                        ""reduction"": ""Consistent health risk reduction - maintain low composite risk 5 of 7 days"",
                        ""buildup"": ""Consistent multi-nutrient achievement - hit composite nutrition target 6 of 7 days"",
                        ""assessment"": ""Consistent holistic wellness - maintain composite wellness score ≥80% most days""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How composite frequency progress is visualized in UI"",
                    ""composite_frequency_ui_behavior"": {
                        ""countdown"": ""Shows frequency of maintaining low composite risk - 'X of Y days in safe range'"",
                        ""buildup"": ""Shows frequency of hitting composite targets - 'X of Y days achieved wellness target'"",
                        ""measurement"": ""Shows consistency of composite performance - 'X of Y days with good composite score'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Type of frequency window for composite evaluation"",
                    ""composite_frequency_behavior"": {
                        ""rolling_7_day"": ""Continuous 7-day window with daily composite scoring for consistency"",
                        ""rolling_30_day"": ""Continuous 30-day window for long-term composite pattern analysis"",
                        ""calendar_week"": ""Weekly cycles with composite frequency tracking Monday-Sunday"",
                        ""calendar_month"": ""Monthly cycles with composite consistency evaluation""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""composite""],
                    ""description"": ""Fixed as 'composite' - indicates daily multi-component aggregation within frequency window"",
                    ""composite_frequency_context"": ""Always 'composite' for weighted multi-component frequency scoring""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Assessment timeframe for composite frequency evaluation"",
                    ""note"": ""Should match period_type for consistent composite frequency scoring""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""frequency_target"", ""composite_frequency_target""],
                    ""description"": ""How composite frequency success is determined"",
                    ""composite_frequency_criteria_types"": {
                        ""frequency_target"": ""X of Y days achieving composite target score"",
                        ""composite_frequency_target"": ""Complex frequency pattern with composite requirements""
                    }
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Specific frequency specification with composite target context"",
                    ""composite_frequency_format_examples"": [
                        ""achieve composite target (≥80%) on 5 of 7 days"",
                        ""maintain composite wellness score ≥75% on 6 of 7 days"",
                        ""hit all component targets on 4 of 7 days"",
                        ""composite score ≥90% on 3 of 7 days""
                    ],
                    ""composite_frequency_pattern_types"": {
                        ""composite_target_frequency"": ""X days achieving overall composite score target"",
                        ""component_completeness_frequency"": ""X days achieving all individual component targets"",
                        ""composite_threshold_frequency"": ""X days maintaining composite score above threshold"",
                        ""progressive_composite_frequency"": ""Increasing composite requirements over time""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""weighted_average"", ""weighted_sum"", ""max"", ""min"", ""custom_formula""],
                    ""description"": ""How daily composite value is derived for frequency evaluation"",
                    ""composite_frequency_calculation_usage"": {
                        ""weighted_average"": ""Daily weighted average of components for frequency pattern evaluation"",
                        ""weighted_sum"": ""Daily weighted sum of components for frequency tracking"",
                        ""max"": ""Daily best component performance for frequency assessment"",
                        ""min"": ""Daily bottleneck component for frequency evaluation (all components must succeed)"",
                        ""custom_formula"": ""Daily custom calculation for specialized frequency requirements""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object"",
                    ""description"": ""Explicit field mappings for all composite components within frequency evaluation"",
                    ""structure"": {
                        ""component_field_mapping"": {
                            ""component_name"": ""field_name or complex field mapping object for daily evaluation"",
                            ""note"": ""Each component must specify how daily data is retrieved for frequency tracking""
                        }
                    },
                    ""composite_frequency_examples"": {
                        ""wellness_frequency_tracking"": {
                            ""daily_sleep_hours"": ""sleep_duration_hours"",
                            ""daily_exercise_minutes"": ""exercise_minutes"",
                            ""daily_mood_rating"": ""mood_scale_1_10"",
                            ""daily_stress_level"": ""stress_rating_1_10""
                        },
                        ""nutrition_frequency_tracking"": {
                            ""daily_protein_grams"": ""protein_intake_total"",
                            ""daily_fiber_grams"": ""fiber_intake_total"",
                            ""daily_water_glasses"": ""water_consumption_count""
                        }
                    }
                },
                ""components"": {
                    ""type"": ""array"",
                    ""description"": ""List of component definitions for daily composite scoring within frequency window"",
                    ""structure"": {
                        ""component_object"": {
                            ""name"": ""string - unique identifier for this component"",
                            ""weight"": ""number - relative importance for daily composite calculation"",
                            ""target"": ""number - daily target value for this component"",
                            ""unit"": ""string - measurement unit for this component"",
                            ""scoring_method"": ""string - how this component is scored daily (proportional, binary, zone)"",
                            ""field_name"": ""string - field reference in tracked_metrics for daily evaluation"",
                            ""frequency_contribution"": ""string - how this component contributes to frequency success""
                        }
                    },
                    ""composite_frequency_component_patterns"": {
                        ""wellness_consistency"": [
                            {
                                ""name"": ""sleep_quality"",
                                ""weight"": 0.35,
                                ""target"": 8,
                                ""unit"": ""hours"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_sleep_hours"",
                                ""frequency_contribution"": ""sleep ≥7 hours for frequency success""
                            },
                            {
                                ""name"": ""exercise_completion"",
                                ""weight"": 0.25,
                                ""target"": 30,
                                ""unit"": ""minutes"",
                                ""scoring_method"": ""binary"",
                                ""field_name"": ""daily_exercise_minutes"",
                                ""frequency_contribution"": ""exercise ≥30 min for frequency success""
                            },
                            {
                                ""name"": ""mood_stability"",
                                ""weight"": 0.25,
                                ""target"": 7,
                                ""unit"": ""scale_1_10"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_mood_rating"",
                                ""frequency_contribution"": ""mood ≥6 for frequency success""
                            },
                            {
                                ""name"": ""stress_management"",
                                ""weight"": 0.15,
                                ""target"": 4,
                                ""unit"": ""scale_1_10"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_stress_level"",
                                ""frequency_contribution"": ""stress ≤5 for frequency success""
                            }
                        ],
                        ""nutrition_consistency"": [
                            {
                                ""name"": ""protein_adequacy"",
                                ""weight"": 0.4,
                                ""target"": 150,
                                ""unit"": ""grams"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_protein_grams"",
                                ""frequency_contribution"": ""protein ≥120g for frequency success""
                            },
                            {
                                ""name"": ""fiber_adequacy"",
                                ""weight"": 0.35,
                                ""target"": 25,
                                ""unit"": ""grams"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_fiber_grams"",
                                ""frequency_contribution"": ""fiber ≥20g for frequency success""
                            },
                            {
                                ""name"": ""hydration_adequacy"",
                                ""weight"": 0.25,
                                ""target"": 8,
                                ""unit"": ""glasses"",
                                ""scoring_method"": ""proportional"",
                                ""field_name"": ""daily_water_glasses"",
                                ""frequency_contribution"": ""water ≥6 glasses for frequency success""
                            }
                        ]
                    }
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Primary unit identifier for composite score (typically 'composite_score' or 'percentage')"",
                    ""examples"": [""composite_score"", ""percentage"", ""wellness_index"", ""nutrition_score""]
                },
                ""minimum_threshold"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Minimum daily composite score for frequency counting"",
                    ""composite_frequency_usage"": ""Sets floor for daily composite scores before frequency pattern evaluation""
                },
                ""maximum_cap"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Maximum daily composite score cap"",
                    ""composite_frequency_usage"": ""Caps daily composite scores before frequency aggregation""
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the composite weighted frequency scoring configuration""
                }
            },
            ""composite_frequency_scoring_logic"": {
                ""step_1"": ""Daily component evaluation: Get actual values for each component from tracked_metrics"",
                ""step_2"": ""Daily component scoring: Score each component using its scoring_method"",
                ""step_3"": ""Daily weight application: Apply component weights to individual daily scores"",
                ""step_4"": ""Daily composite calculation: Aggregate weighted scores using calculation_method"",
                ""step_5"": ""Daily bounds application: Apply minimum_threshold and maximum_cap to daily composite"",
                ""step_6"": ""Frequency pattern assessment: Evaluate daily composite scores against frequency_requirement"",
                ""step_7"": ""Final score: Based on composite frequency pattern achievement""
            },
            ""field_relationships"": {
                ""goal_type_composite_frequency_mapping"": {
                    ""reduction + countdown"": ""Track frequency of maintaining low composite risk across multiple factors"",
                    ""buildup + buildup"": ""Track frequency of achieving composite targets across multiple components"",
                    ""assessment + measurement"": ""Track consistency of composite performance across holistic metrics""
                },
                ""composite_frequency_alignment"": {
                    ""period_type"": ""Frequency window for composite pattern evaluation"",
                    ""evaluation_period"": ""Technical scoring window (should match period_type)"",
                    ""frequency_requirement"": ""Composite pattern specification within the window"",
                    ""components"": ""Daily composite calculation framework"",
                    ""calculation_method"": ""How daily composite scores are derived for frequency evaluation"",
                    ""note"": ""All components must align for coherent composite frequency scoring""
                }
            },
            ""validation_rules"": [
                ""components array must contain at least 2 component objects"",
                ""component weights must sum to exactly 1.0"",
                ""each component must have unique name within configuration"",
                ""each component field_name must exist in tracked_metrics"",
                ""component targets must be positive numbers"",
                ""frequency_requirement must specify achievable composite pattern within evaluation window"",
                ""goal_type and progress_direction must be logically consistent"",
                ""period_type and evaluation_period should match for frequency patterns"",
                ""minimum_threshold must be >= 0 and <= maximum_cap""
            ],
            ""use_case_examples"": {
                ""wellness_consistency_tracking"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""rolling_7_day"",
                    ""calculation_method"": ""weighted_average"",
                    ""frequency_requirement"": ""achieve composite wellness ≥80% on 5 of 7 days"",
                    ""components"": [
                        {
                            ""name"": ""sleep_quality"",
                            ""weight"": 0.35,
                            ""target"": 8,
                            ""unit"": ""hours"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_sleep_hours""
                        },
                        {
                            ""name"": ""exercise_completion"",
                            ""weight"": 0.25,
                            ""target"": 30,
                            ""unit"": ""minutes"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_exercise_minutes""
                        },
                        {
                            ""name"": ""mood_stability"",
                            ""weight"": 0.25,
                            ""target"": 8,
                            ""unit"": ""scale_1_10"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_mood_rating""
                        },
                        {
                            ""name"": ""stress_management"",
                            ""weight"": 0.15,
                            ""target"": 3,
                            ""unit"": ""scale_1_10"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_stress_level""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""daily_sleep_hours"": ""sleep_duration"",
                        ""daily_exercise_minutes"": ""exercise_time"",
                        ""daily_mood_rating"": ""mood_score"",
                        ""daily_stress_level"": ""stress_score""
                    },
                    ""user_experience"": ""Holistic wellness consistency - maintain 80% composite wellness score 5 of 7 days""
                },
                ""nutrition_adherence_frequency"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""calendar_week"",
                    ""calculation_method"": ""weighted_average"",
                    ""frequency_requirement"": ""achieve composite nutrition ≥85% on 6 of 7 days"",
                    ""components"": [
                        {
                            ""name"": ""protein_adequacy"",
                            ""weight"": 0.4,
                            ""target"": 150,
                            ""unit"": ""grams"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_protein_grams""
                        },
                        {
                            ""name"": ""fiber_adequacy"",
                            ""weight"": 0.35,
                            ""target"": 25,
                            ""unit"": ""grams"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_fiber_grams""
                        },
                        {
                            ""name"": ""hydration_adequacy"",
                            ""weight"": 0.25,
                            ""target"": 8,
                            ""unit"": ""glasses"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_water_glasses""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""daily_protein_grams"": ""protein_intake"",
                        ""daily_fiber_grams"": ""fiber_intake"",
                        ""daily_water_glasses"": ""water_count""
                    },
                    ""user_experience"": ""Nutrition consistency - achieve 85% composite nutrition score 6 of 7 days weekly""
                },
                ""health_risk_control"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""rolling_7_day"",
                    ""calculation_method"": ""weighted_average"",
                    ""frequency_requirement"": ""maintain composite risk ≤20% on 6 of 7 days"",
                    ""components"": [
                        {
                            ""name"": ""blood_pressure_control"",
                            ""weight"": 0.5,
                            ""target"": 120,
                            ""unit"": ""mmhg"",
                            ""scoring_method"": ""zone"",
                            ""field_name"": ""daily_systolic_bp""
                        },
                        {
                            ""name"": ""weight_management"",
                            ""weight"": 0.3,
                            ""target"": 25,
                            ""unit"": ""bmi"",
                            ""scoring_method"": ""zone"",
                            ""field_name"": ""daily_bmi""
                        },
                        {
                            ""name"": ""activity_adequacy"",
                            ""weight"": 0.2,
                            ""target"": 10000,
                            ""unit"": ""steps"",
                            ""scoring_method"": ""proportional"",
                            ""field_name"": ""daily_steps""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""daily_systolic_bp"": ""bp_systolic"",
                        ""daily_bmi"": ""body_mass_index"",
                        ""daily_steps"": ""step_count""
                    },
                    ""user_experience"": ""Health risk control - maintain low composite risk (≤20%) 6 of 7 days""
                }
            },
            ""composite_frequency_scoring_variations"": {
                ""high_consistency_composite"": {
                    ""frequency_requirement"": ""achieve composite target ≥90% on 6 of 7 days"",
                    ""behavior"": ""High standards with strong consistency requirements""
                },
                ""moderate_consistency_composite"": {
                    ""frequency_requirement"": ""achieve composite target ≥75% on 5 of 7 days"",
                    ""behavior"": ""Moderate standards with reasonable consistency""
                },
                ""flexible_consistency_composite"": {
                    ""frequency_requirement"": ""achieve composite target ≥60% on 4 of 7 days"",
                    ""behavior"": ""Lower barrier with minimum consistency requirements""
                },
                ""progressive_composite_frequency"": {
                    ""frequency_requirement"": ""improve weekly composite average by 5%"",
                    ""behavior"": ""Progressive improvement in composite frequency performance""
                }
            },
            ""ui_complexity_considerations"": {
                ""daily_composite_display"": ""Show daily composite score with component breakdown"",
                ""frequency_progress_display"": ""Show composite frequency achievement (3 of 5 target days)"",
                ""component_contribution_analysis"": ""Show which components drive frequency success/failure"",
                ""window_composite_pattern"": ""Show composite score distribution across frequency window"",
                ""composite_trend_tracking"": ""Track composite score consistency over time"",
                ""component_frequency_correlation"": ""Show which components most affect frequency success""
            },
            ""advanced_composite_frequency_patterns"": {
                ""all_component_success_frequency"": {
                    ""frequency_requirement"": ""all components meet targets on 4 of 7 days"",
                    ""behavior"": ""Requires every component to succeed simultaneously for frequency counting""
                },
                ""weighted_component_frequency"": {
                    ""frequency_requirement"": ""high-weight components succeed 6 of 7 days, all components 4 of 7 days"",
                    ""behavior"": ""Different frequency requirements based on component importance""
                },
                ""composite_streak_frequency"": {
                    ""frequency_requirement"": ""3 consecutive days with composite ≥85%"",
                    ""behavior"": ""Streak-based composite frequency requiring sustained performance""
                }
            }
        }","Composite weighted scoring evaluated daily, then frequency-based success within a trailing 7-day window. Use when recommendation has multiple measurable components AND frequency matters.",https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#10-composite-weighted-frequency-sc-composite-frequency,"fruit servings (60%) + variety (40%) achieved on 5 of 7 days. Daily score = weighted average of components, then frequency score = (Days meeting threshold/Target days) × 100%",,checked,
SC-COMPOSITE-SLEEP-ADVANCED,Composite Sleep Duration + Schedule Consistency,composite_weighted,"{
            ""method"": ""composite_weighted"",
            ""formula"": ""weighted average of sleep duration + schedule consistency components"",
            ""evaluation_pattern"": ""daily"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"", 
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""components""
            ],
            ""optional_fields"": [
                ""minimum_threshold"",
                ""maximum_cap"",
                ""frequency_requirement"",
                ""description"",
                ""calculation_notes""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""sleep_composite_examples"": {
                        ""reduction"": ""Reduce sleep inconsistency and sleep debt - minimize variance and duration deficits"",
                        ""buildup"": ""Build healthy sleep patterns - optimize duration and consistency together"",
                        ""assessment"": ""Comprehensive sleep quality assessment - duration + schedule + efficiency composite""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How sleep composite progress is visualized in UI"",
                    ""sleep_composite_ui_behavior"": {
                        ""countdown"": ""Ring depletes with poor sleep patterns - inconsistency and insufficient duration"",
                        ""buildup"": ""Ring fills with healthy sleep achievements - optimal duration + consistent schedule"",
                        ""measurement"": ""Ring shows overall sleep quality - composite assessment of multiple sleep factors""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Type of evaluation period for sleep composite scoring"",
                    ""sleep_composite_behavior"": {
                        ""daily"": ""Fresh sleep composite evaluation each day based on previous night"",
                        ""rolling_7_day"": ""Continuous 7-day sleep pattern analysis with rolling consistency metrics"",
                        ""rolling_30_day"": ""Continuous 30-day sleep trend analysis for long-term pattern assessment""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""composite""],
                    ""description"": ""Fixed as 'composite' - indicates multiple sleep component aggregation"",
                    ""sleep_composite_context"": ""Always 'composite' for multi-factor sleep quality assessment""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""daily"", ""rolling_7_day"", ""rolling_30_day""],
                    ""description"": ""Assessment timeframe for sleep composite scoring calculation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""composite_target"", ""sleep_quality_target""],
                    ""description"": ""How sleep composite success is determined"",
                    ""sleep_composite_criteria_types"": {
                        ""composite_target"": ""Overall sleep composite score meets threshold"",
                        ""sleep_quality_target"": ""Holistic sleep quality assessment across all components""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""composite"", ""weighted_average"", ""sleep_composite_algorithm""],
                    ""description"": ""How sleep composite value is derived from multiple sleep components"",
                    ""sleep_composite_calculation_usage"": {
                        ""composite"": ""Standard composite calculation for sleep factors"",
                        ""weighted_average"": ""Weighted average of sleep duration + schedule consistency"",
                        ""sleep_composite_algorithm"": ""Specialized algorithm for sleep quality assessment""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""object"",
                    ""description"": ""Explicit field mappings for all sleep composite components including rolling calculations"",
                    ""structure"": {
                        ""sleep_duration_component"": ""field mapping for calculated sleep duration"",
                        ""schedule_consistency_component"": ""field mapping for calculated schedule variance with rolling windows"",
                        ""timestamp_components"": ""field mappings for raw sleep_time and wake_time timestamps""
                    },
                    ""sleep_composite_examples"": {
                        ""duration_and_consistency"": {
                            ""sleep_duration"": ""sleep_duration"",
                            ""sleep_timing"": ""sleep_time"",
                            ""wake_timing"": ""wake_time""
                        },
                        ""comprehensive_sleep_with_calculated_fields"": {
                            ""sleep_duration"": ""sleep_duration"",
                            ""sleep_time_consistency"": ""sleep_time_consistency"",
                            ""wake_time_consistency"": ""wake_time_consistency""
                        },
                        ""raw_timestamp_processing"": {
                            ""sleep_timestamps"": ""sleep_time"",
                            ""wake_timestamps"": ""wake_time"",
                            ""note"": ""For advanced rolling variance calculations from raw timestamp data""
                        }
                    }
                },
                ""components"": {
                    ""type"": ""array"",
                    ""description"": ""List of sleep component definitions for composite sleep quality scoring"",
                    ""structure"": {
                        ""component_object"": {
                            ""name"": ""string - unique identifier for this sleep component"",
                            ""weight"": ""number - relative importance in sleep composite (sum should equal 1.0)"",
                            ""scoring_method"": ""string - component-specific scoring approach"",
                            ""units"": ""string - component-specific measurement units"",
                            ""field_name"": ""string - reference to tracked_metrics field"",
                            ""description"": ""string - component description"",
                            ""additional_fields"": ""varies by scoring_method - zones, targets, variance thresholds, etc.""
                        }
                    },
                    ""sleep_composite_component_patterns"": {
                        ""duration_plus_consistency"": [
                            {
                                ""name"": ""sleep_duration"",
                                ""weight"": 0.6,
                                ""scoring_method"": ""zone_based"",
                                ""units"": ""time_hours_minutes"",
                                ""field_name"": ""sleep_duration"",
                                ""description"": ""Optimal sleep duration assessment"",
                                ""zones"": [
                                    {""range"": ""<6"", ""score"": 0, ""label"": ""insufficient""},
                                    {""range"": ""6-6.9"", ""score"": 50, ""label"": ""low""},
                                    {""range"": ""7-9"", ""score"": 100, ""label"": ""optimal""},
                                    {""range"": ""9.1-10"", ""score"": 75, ""label"": ""excessive""},
                                    {""range"": "">10"", ""score"": 25, ""label"": ""very_excessive""}
                                ]
                            },
                            {
                                ""name"": ""schedule_consistency"",
                                ""weight"": 0.4,
                                ""scoring_method"": ""rolling_variance_proportional"",
                                ""units"": ""minutes"",
                                ""field_name"": ""sleep_time_consistency"",
                                ""description"": ""Sleep timing consistency using calculated variance"",
                                ""target_variance"": 30,
                                ""variance_window"": 7,
                                ""max_variance_penalty"": 60
                            }
                        ],
                        ""comprehensive_sleep_assessment"": [
                            {
                                ""name"": ""sleep_duration"",
                                ""weight"": 0.35,
                                ""scoring_method"": ""zone_based"",
                                ""units"": ""time_hours_minutes"",
                                ""field_name"": ""sleep_duration"",
                                ""description"": ""Sleep duration optimization"",
                                ""zones"": [
                                    {""range"": ""<6"", ""score"": 0, ""label"": ""insufficient""},
                                    {""range"": ""6-6.9"", ""score"": 40, ""label"": ""low""},
                                    {""range"": ""7-9"", ""score"": 100, ""label"": ""optimal""},
                                    {""range"": ""9.1-10"", ""score"": 80, ""label"": ""long""},
                                    {""range"": "">10"", ""score"": 40, ""label"": ""excessive""}
                                ]
                            },
                            {
                                ""name"": ""bedtime_consistency"",
                                ""weight"": 0.25,
                                ""scoring_method"": ""rolling_variance_proportional"",
                                ""units"": ""minutes"",
                                ""field_name"": ""sleep_time_consistency"",
                                ""description"": ""Bedtime schedule consistency"",
                                ""target_variance"": 30,
                                ""variance_window"": 7,
                                ""perfect_score_variance"": 15
                            },
                            {
                                ""name"": ""wake_time_consistency"", 
                                ""weight"": 0.25,
                                ""scoring_method"": ""rolling_variance_proportional"",
                                ""units"": ""minutes"",
                                ""field_name"": ""wake_time_consistency"",
                                ""description"": ""Wake time schedule consistency"",
                                ""target_variance"": 30,
                                ""variance_window"": 7,
                                ""perfect_score_variance"": 15
                            },
                            {
                                ""name"": ""sleep_efficiency"",
                                ""weight"": 0.15,
                                ""scoring_method"": ""proportional"",
                                ""units"": ""percentage"",
                                ""field_name"": ""sleep_efficiency"",
                                ""description"": ""Sleep efficiency (time asleep / time in bed)"",
                                ""target"": 85,
                                ""minimum_threshold"": 70
                            }
                        ]
                    }
                },
                ""minimum_threshold"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Minimum sleep composite score for any points"",
                    ""sleep_composite_usage"": ""Prevents negative sleep scores, sets floor for overall sleep assessment""
                },
                ""maximum_cap"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Maximum sleep composite score cap"",
                    ""sleep_composite_usage"": ""Caps sleep composite scores to maintain 0-100 scale""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day sleep composite evaluation"",
                    ""sleep_examples"": [""daily"", ""good sleep composite ≥80 on 5 of 7 nights"", ""consistent sleep pattern weekly""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the sleep composite scoring configuration""
                },
                ""calculation_notes"": {
                    ""type"": ""object"",
                    ""description"": ""Detailed implementation notes for complex sleep algorithms"",
                    ""structure"": {
                        ""variance_calculation"": ""How rolling variance is calculated for schedule consistency"",
                        ""time_handling"": ""How timestamp fields are processed and converted"",
                        ""edge_cases"": ""Handling of missing data, timezone changes, etc."",
                        ""algorithm_details"": ""Specific mathematical formulas for composite calculations""
                    },
                    ""sleep_calculation_examples"": {
                        ""schedule_variance"": {
                            ""method"": ""Standard deviation of sleep/wake times over rolling window"",
                            ""formula"": ""sqrt(sum((time_i - mean_time)^2) / (n-1))"",
                            ""perfect_consistency"": ""0 minutes variance = 100% consistency score"",
                            ""scoring"": ""Linear decay from 100% at 0 variance to 0% at max_variance_penalty""
                        },
                        ""timestamp_conversion"": {
                            ""input_format"": ""timestamp (datetime)"",
                            ""calculation_unit"": ""minutes since midnight for variance calculations"",
                            ""cross_midnight"": ""Handle bedtimes after midnight properly"",
                            ""duration_calculation"": ""wake_time - sleep_time with cross-midnight handling""
                        }
                    }
                }
            },
            ""sleep_composite_scoring_logic"": {
                ""step_1"": ""Sleep data retrieval: Get sleep duration from calculated field, timestamps from raw fields"",
                ""step_2"": ""Duration scoring: Score sleep duration using zone-based method"",
                ""step_3"": ""Consistency calculation: Use pre-calculated consistency fields OR calculate rolling variance from timestamps"",
                ""step_4"": ""Consistency scoring: Score consistency using variance-based proportional method"",
                ""step_5"": ""Weight application: Apply component weights to individual scores"",
                ""step_6"": ""Composite calculation: Aggregate weighted scores for final sleep composite"",
                ""step_7"": ""Bounds application: Apply minimum_threshold and maximum_cap to final score""
            },
            ""field_relationships"": {
                ""goal_type_sleep_composite_mapping"": {
                    ""reduction + countdown"": ""Reduce sleep problems - minimize inconsistency and sleep debt"",
                    ""buildup + buildup"": ""Build healthy sleep habits - optimize duration and consistency together"",
                    ""assessment + measurement"": ""Comprehensive sleep quality assessment across multiple factors""
                },
                ""sleep_component_alignment"": {
                    ""components"": ""Must define sleep-specific weighted elements (duration + consistency minimum)"",
                    ""tracked_metrics"": ""Must contain field mappings for sleep duration and timing data"",
                    ""calculation_method"": ""Must support composite sleep-specific algorithms"",
                    ""weights"": ""Must sum to 1.0 across all sleep components"",
                    ""field_references"": ""Each component must specify field_name matching tracked_metrics""
                }
            },
            ""validation_rules"": [
                ""components array must contain at least 2 sleep-related component objects"",
                ""component weights must sum to exactly 1.0"",
                ""each component must have unique name within sleep configuration"",
                ""each component must specify appropriate units for sleep measurements"",
                ""each component must include field_name referencing tracked_metrics"",
                ""tracked_metrics must contain field references for all sleep components"",
                ""sleep duration component should use time-based units (time_hours_minutes)"",
                ""schedule consistency components should use variance-based scoring methods"",
                ""calculation_notes should document complex algorithms for implementation""
            ],
            ""use_case_examples"": {
                ""basic_sleep_quality"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""daily"",
                    ""calculation_method"": ""weighted_average"",
                    ""components"": [
                        {
                            ""name"": ""sleep_duration"",
                            ""weight"": 0.7,
                            ""scoring_method"": ""zone_based"",
                            ""units"": ""time_hours_minutes"",
                            ""field_name"": ""sleep_duration"",
                            ""zones"": [
                                {""range"": ""<6"", ""score"": 0, ""label"": ""insufficient""},
                                {""range"": ""6-6.9"", ""score"": 50, ""label"": ""low""},
                                {""range"": ""7-9"", ""score"": 100, ""label"": ""optimal""},
                                {""range"": ""9.1-10"", ""score"": 75, ""label"": ""excessive""},
                                {""range"": "">10"", ""score"": 25, ""label"": ""very_excessive""}
                            ]
                        },
                        {
                            ""name"": ""schedule_consistency"",
                            ""weight"": 0.3,
                            ""scoring_method"": ""rolling_variance_proportional"",
                            ""units"": ""minutes"",
                            ""field_name"": ""sleep_time_consistency"",
                            ""target_variance"": 30,
                            ""variance_window"": 7
                        }
                    ],
                    ""tracked_metrics"": {
                        ""sleep_duration"": ""sleep_duration"",
                        ""sleep_time_consistency"": ""sleep_time_consistency""
                    },
                    ""user_experience"": ""Daily sleep quality combining duration (70%) and schedule consistency (30%)""
                },
                ""comprehensive_sleep_optimization"": {
                    ""goal_type"": ""buildup"",
                    ""progress_direction"": ""buildup"",
                    ""period_type"": ""rolling_7_day"",
                    ""calculation_method"": ""sleep_composite_algorithm"",
                    ""components"": [
                        {
                            ""name"": ""sleep_duration"",
                            ""weight"": 0.4,
                            ""scoring_method"": ""zone_based"",
                            ""units"": ""time_hours_minutes"",
                            ""field_name"": ""sleep_duration""
                        },
                        {
                            ""name"": ""bedtime_consistency"",
                            ""weight"": 0.25,
                            ""scoring_method"": ""rolling_variance_proportional"",
                            ""units"": ""minutes"",
                            ""field_name"": ""sleep_time_consistency""
                        },
                        {
                            ""name"": ""wake_time_consistency"",
                            ""weight"": 0.25,
                            ""scoring_method"": ""rolling_variance_proportional"",
                            ""units"": ""minutes"",
                            ""field_name"": ""wake_time_consistency""
                        },
                        {
                            ""name"": ""sleep_efficiency"",
                            ""weight"": 0.1,
                            ""scoring_method"": ""proportional"",
                            ""units"": ""percentage"",
                            ""field_name"": ""sleep_efficiency""
                        }
                    ],
                    ""tracked_metrics"": {
                        ""sleep_duration"": ""sleep_duration"",
                        ""sleep_time_consistency"": ""sleep_time_consistency"", 
                        ""wake_time_consistency"": ""wake_time_consistency"",
                        ""sleep_efficiency"": ""sleep_efficiency""
                    },
                    ""user_experience"": ""Comprehensive sleep optimization with duration, consistency, and efficiency tracking""
                }
            }
        }",Advanced composite scoring combining sleep duration (zone-based) with schedule consistency (rolling variance algorithm). Requires sophisticated rolling average calculations and multi-metric tracking. This is WellPath's first complex composite implementation.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#11-composite-sleep-advanced-sc-composite-sleep-advanced,"Sleep duration (7-9hr zones, 60% weight) + Schedule consistency (≤60min variation from rolling average bedtime/wake time, 40% weight)",REC0004.3,checked,
SC-CONSTRAINED-WEEKLY-ALLOWANCE,Constrained Weekly Allowance,binary_threshold,"{
            ""method"": ""constrained_weekly_allowance"",
            ""formula"": ""if (weekly_total <= max_quantity AND days_with_consumption <= max_days) then success_value else failure_value"",
            ""evaluation_pattern"": ""weekly_constraint"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""max_weekly_quantity"",
                ""max_consumption_days"",
                ""success_value"",
                ""failure_value"",
                ""units""
            ],
            ""optional_fields"": [
                ""comparison_operator"",
                ""frequency_requirement"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""weekly_constraint_examples"": {
                        ""reduction"": ""Alcohol reduction with dual constraints - ≤3 drinks total AND ≤2 drinking days per week"",
                        ""buildup"": ""Treat allowance with limits - ≤2 desserts total AND ≤1 dessert day per week (controlled indulgence)"",
                        ""assessment"": ""Social activity tracking - ≤3 social events total AND ≤2 event days per week (balance assessment)""
                    }
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                    ""description"": ""How weekly constraint progress is visualized in UI"",
                    ""weekly_constraint_ui_behavior"": {
                        ""countdown"": ""Ring starts full, depletes with consumption - shows 'X drinks remaining, Y days remaining'"",
                        ""buildup"": ""Ring tracks allowance usage - shows 'X of Y drinks used, A of B days used'"",
                        ""measurement"": ""Ring shows constraint adherence - shows 'Within limits: X/Y quantity, A/B days'""
                    }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""calendar_week"", ""rolling_7_day""],
                    ""description"": ""Type of weekly evaluation period for constraint tracking"",
                    ""weekly_constraint_behavior"": {
                        ""calendar_week"": ""Monday-Sunday constraint tracking with fresh weekly allowances"",
                        ""rolling_7_day"": ""Continuous 7-day sliding window constraint tracking for consistent accountability""
                    }
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""count"", ""duration"", ""scale""],
                    ""description"": ""What we're measuring for weekly constraint evaluation"",
                    ""weekly_constraint_context"": ""Typically 'count' for discrete items (drinks, treats) but supports duration/scale""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""calendar_week"", ""rolling_7_day""],
                    ""description"": ""Assessment timeframe for weekly constraint evaluation"",
                    ""note"": ""Should match period_type for consistent weekly constraint tracking""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""dual_constraint_target"", ""weekly_allowance_target""],
                    ""description"": ""How weekly constraint success is determined"",
                    ""weekly_constraint_criteria_types"": {
                        ""dual_constraint_target"": ""Both quantity AND frequency constraints must be met"",
                        ""weekly_allowance_target"": ""Weekly allowance system with dual limits""
                    }
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""sum"", ""count"", ""average"", ""max""],
                    ""description"": ""How weekly total is derived for constraint evaluation"",
                    ""weekly_constraint_usage"": {
                        ""sum"": ""Total weekly consumption for quantity constraint"",
                        ""count"": ""Count of consumption instances for quantity constraint"",
                        ""average"": ""Average daily consumption for constraint evaluation"",
                        ""max"": ""Maximum single-day consumption for constraint checking""
                    }
                },
                ""tracked_metrics"": {
                    ""type"": ""string"",
                    ""description"": ""Field name to track for weekly constraint evaluation"",
                    ""weekly_constraint_examples"": {
                        ""alcohol_tracking"": ""daily_alcohol_drinks"",
                        ""treat_tracking"": ""daily_dessert_count"",
                        ""social_tracking"": ""daily_social_events"",
                        ""screen_time_tracking"": ""daily_recreational_screen_minutes""
                    }
                },
                ""max_weekly_quantity"": {
                    ""type"": ""number"",
                    ""description"": ""Maximum total allowed per week (quantity constraint)"",
                    ""weekly_constraint_context"": ""First constraint - total weekly amount must not exceed this limit""
                },
                ""max_consumption_days"": {
                    ""type"": ""number"",
                    ""description"": ""Maximum days per week with consumption allowed (frequency constraint)"",
                    ""weekly_constraint_context"": ""Second constraint - consumption can only occur on this many days per week""
                },
                ""success_value"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Score when both weekly constraints are met""
                },
                ""failure_value"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Score when either weekly constraint is violated""
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for weekly quantities"",
                    ""examples"": [""drinks"", ""servings"", ""treats"", ""events"", ""minutes"", ""hours""]
                },
                ""comparison_operator"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""<="", ""<"", "">="", "">""],
                    ""default"": ""<="",
                    ""description"": ""Comparison operator for both quantity and frequency constraints""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Additional frequency specification for multi-week evaluation"",
                    ""examples"": [""weekly"", ""meet constraints 3 of 4 weeks"", ""consistent weekly adherence""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the weekly constraint configuration""
                }
            },
            ""weekly_constraint_scoring_logic"": {
                ""step_1"": ""Weekly data aggregation: Sum/count consumption across evaluation period"",
                ""step_2"": ""Quantity constraint check: weekly_total <= max_weekly_quantity"",
                ""step_3"": ""Frequency constraint check: days_with_consumption <= max_consumption_days"",
                ""step_4"": ""Dual constraint evaluation: BOTH constraints must be satisfied"",
                ""step_5"": ""Final score: if (quantity_ok AND frequency_ok) then success_value else failure_value""
            },
            ""field_relationships"": {
                ""goal_type_weekly_constraint_mapping"": {
                    ""reduction + countdown"": ""Reduce harmful consumption with dual limits - ring depletes with violations"",
                    ""buildup + buildup"": ""Build controlled habits with allowances - ring tracks usage within limits"",
                    ""assessment + measurement"": ""Assess consumption patterns against healthy boundaries""
                },
                ""constraint_alignment_requirements"": {
                    ""max_weekly_quantity"": ""Total amount constraint for the week"",
                    ""max_consumption_days"": ""Frequency constraint for the week"",
                    ""tracked_metrics"": ""Daily field that aggregates into weekly totals"",
                    ""calculation_method"": ""How daily values aggregate into weekly constraint evaluation"",
                    ""note"": ""Both constraints must be violated independently for failure""
                }
            },
            ""validation_rules"": [
                ""max_weekly_quantity must be positive number"",
                ""max_consumption_days must be between 1 and 7"",
                ""max_consumption_days should be logically consistent with max_weekly_quantity"",
                ""tracked_metrics must reference valid daily measurement field"",
                ""success_value and failure_value must be valid score values (typically 0-100)"",
                ""period_type and evaluation_period should match for consistent tracking"",
                ""units must match expected measurement_type format""
            ],
            ""use_case_examples"": {
                ""alcohol_moderation"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""calendar_week"",
                    ""measurement_type"": ""count"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_alcohol_drinks"",
                    ""max_weekly_quantity"": 3,
                    ""max_consumption_days"": 2,
                    ""success_value"": 100,
                    ""failure_value"": 0,
                    ""units"": ""drinks"",
                    ""description"": ""Alcohol moderation: ≤3 drinks total AND ≤2 drinking days per week"",
                    ""user_experience"": ""Weekly alcohol allowance - can have up to 3 drinks but only on 2 days maximum""
                },
                ""dessert_control"": {
                    ""goal_type"": ""reduction"",
                    ""progress_direction"": ""countdown"",
                    ""period_type"": ""rolling_7_day"",
                    ""measurement_type"": ""count"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_dessert_servings"",
                    ""max_weekly_quantity"": 2,
                    ""max_consumption_days"": 1,
                    ""success_value"": 100,
                    ""failure_value"": 0,
                    ""units"": ""servings"",
                    ""description"": ""Dessert control: ≤2 servings total AND ≤1 dessert day per week"",
                    ""user_experience"": ""Controlled indulgence - up to 2 dessert servings but only on 1 day per week""
                },
                ""social_balance"": {
                    ""goal_type"": ""assessment"",
                    ""progress_direction"": ""measurement"",
                    ""period_type"": ""calendar_week"",
                    ""measurement_type"": ""count"",
                    ""calculation_method"": ""sum"",
                    ""tracked_metrics"": ""daily_social_events"",
                    ""max_weekly_quantity"": 4,
                    ""max_consumption_days"": 3,
                    ""success_value"": 100,
                    ""failure_value"": 0,
                    ""units"": ""events"",
                    ""description"": ""Social balance: ≤4 events total AND ≤3 social days per week"",
                    ""user_experience"": ""Social activity balance - up to 4 events but spread across max 3 days""
                }
            },
            ""constraint_violation_scenarios"": {
                ""quantity_violation_only"": {
                    ""scenario"": ""5 drinks across 2 days (max: 3 drinks, 2 days)"",
                    ""result"": ""FAIL - exceeds quantity limit despite meeting frequency limit""
                },
                ""frequency_violation_only"": {
                    ""scenario"": ""2 drinks across 3 days (max: 3 drinks, 2 days)"",
                    ""result"": ""FAIL - exceeds frequency limit despite meeting quantity limit""
                },
                ""both_violations"": {
                    ""scenario"": ""5 drinks across 4 days (max: 3 drinks, 2 days)"",
                    ""result"": ""FAIL - exceeds both quantity and frequency limits""
                },
                ""success_scenario"": {
                    ""scenario"": ""3 drinks across 2 days (max: 3 drinks, 2 days)"",
                    ""result"": ""SUCCESS - meets both quantity and frequency constraints""
                }
            },
            ""ui_complexity_considerations"": {
                ""dual_constraint_display"": ""Show both quantity and frequency progress separately"",
                ""allowance_tracking"": ""Display remaining quantity and remaining days"",
                ""constraint_status"": ""Clear indication of which constraint(s) are at risk"",
                ""weekly_reset"": ""Visual indication of weekly reset for calendar_week period_type"",
                ""violation_feedback"": ""Specific messaging about which constraint was violated""
            },
            ""weekly_constraint_variations"": {
                ""strict_dual_constraint"": {
                    ""approach"": ""Both constraints must be met exactly"",
                    ""failure_condition"": ""Any violation of either constraint = total failure"",
                    ""use_case"": ""Strict moderation goals (alcohol, treats)""
                },
                ""flexible_allowance"": {
                    ""approach"": ""Slight tolerance built into constraints"",
                    ""implementation"": ""Set max values slightly below actual limits"",
                    ""use_case"": ""Habit building with some flexibility""
                },
                ""progressive_tightening"": {
                    ""approach"": ""Gradually reduce allowances over time"",
                    ""implementation"": ""Decrease max_weekly_quantity and/or max_consumption_days"",
                    ""use_case"": ""Gradual reduction programs""
                }
            },
            ""calendar_vs_rolling_considerations"": {
                ""calendar_week_advantages"": [
                    ""Clear weekly reset every Monday"",
                    ""Aligns with social/cultural weekly patterns"",
                    ""Easier to plan and understand""
                ],
                ""rolling_7_day_advantages"": [
                    ""Consistent accountability without weekly 'reset parties'"",
                    ""Prevents Monday binge behavior"",
                    ""More precise tracking of consumption patterns""
                ],
                ""recommendation"": ""Use calendar_week for habit building, rolling_7_day for strict moderation""
            }
        }",Weekly quantity limits with additional day frequency constraints. Binary scoring where both conditions must be met.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#12-constrained-weekly-allowance-sc-constrained-weekly-allowance,alcohol consumption 3 drinks per week across 2 days,REC0005.2,checked,
SC-CATEGORICAL-FILTER-DAILY,Categorical Filter Daily Threshold,categorical_filter_threshold,"{
            ""method"": ""categorical_filter_threshold"",
            ""formula"": ""if (count(filter_categories) comparison_operator threshold) then success_value else failure_value"",
            ""evaluation_pattern"": ""daily"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"", 
                ""measurement_type"",
                ""evaluation_period"",
                ""success_criteria"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""filter_categories"",
                ""threshold"",
                ""success_value"",
                ""failure_value""
            ],
            ""optional_fields"": [
                ""comparison_operator"",
                ""frequency_requirement"",
                ""units"", 
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                ""type"": ""string"",
                ""allowed_values"": [""reduction"", ""buildup"", ""assessment""],
                ""description"": ""Classification of goal behavior for UI and scoring logic"",
                ""examples"": {
                    ""reduction"": ""Energy drink limits, unhealthy food category limits (countdown goals)"",
                    ""buildup"": ""Healthy category targets, preferred choice goals (buildup goals)"",
                    ""assessment"": ""Category distribution tracking, choice pattern assessment (measurement goals)""
                }
                },
                ""progress_direction"": {
                ""type"": ""string"", 
                ""allowed_values"": [""countdown"", ""buildup"", ""measurement""],
                ""description"": ""How progress is visualized in UI"",
                ""ui_behavior"": {
                    ""countdown"": ""Ring starts full (100%), empties with violations - 'X category instances remaining'"",
                    ""buildup"": ""Ring starts empty (0%), fills with target categories - 'X% toward category target'"", 
                    ""measurement"": ""Ring populates after measurement - 'Category Score: X%'""
                }
                },
                ""period_type"": {
                ""type"": ""string"",
                ""allowed_values"": [""daily"", ""calendar_week"", ""rolling_7_day"", ""rolling_30_day""],
                ""description"": ""Type of evaluation period - affects reset behavior and user mental model"",
                ""reset_behavior"": {
                    ""daily"": ""Resets every day at 00:00"",
                    ""calendar_week"": ""Resets every Monday at 00:00"",
                    ""rolling_7_day"": ""Continuous 7-day sliding window"", 
                    ""rolling_30_day"": ""Continuous 30-day sliding window""
                }
                },
                ""measurement_type"": {
                ""type"": ""string"",
                ""allowed_values"": [""categorical""],
                ""description"": ""Fixed as 'categorical' - determines category filtering aggregation method""
                },
                ""evaluation_period"": {
                ""type"": ""string"",
                ""allowed_values"": [""daily"", ""rolling_7_day"", ""calendar_week""],
                ""description"": ""Assessment timeframe for categorical scoring calculation""
                },
                ""success_criteria"": {
                ""type"": ""string"",
                ""allowed_values"": [""simple_target"", ""frequency_target""],
                ""description"": ""How categorical success is determined""
                },
                ""calculation_method"": {
                ""type"": ""string"",
                ""allowed_values"": [""categorical_count"", ""categorical_sum"", ""categorical_exists""],
                ""description"": ""How actual_value is derived from filtered categorical data"",
                ""categorical_methods"": {
                    ""categorical_count"": ""Count occurrences of filter_categories"",
                    ""categorical_sum"": ""Sum values for filter_categories (if categories have values)"",
                    ""categorical_exists"": ""Boolean check if any filter_categories exist""
                }
                },
                ""tracked_metrics"": {
                ""type"": ""string"",
                ""description"": ""Categorical field name to filter and count"",
                ""examples"": [
                    ""caffeine_source"",
                    ""food_category"", 
                    ""exercise_type"",
                    ""mood_trigger""
                ]
                },
                ""filter_categories"": {
                ""type"": ""array"",
                ""description"": ""List of category values to filter and count"",
                ""examples"": [
                    [""energy_drink""],
                    [""energy_drink"", ""soda""],
                    [""fast_food"", ""processed_snacks""],
                    [""coffee"", ""tea""]
                ]
                },
                ""threshold"": {
                    ""type"": ""number"",
                    ""description"": ""Count threshold for filtered categories""
                },
                ""success_value"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Score when category threshold met""
                },
                ""failure_value"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Score when category threshold not met""
                },
                ""comparison_operator"": {
                    ""type"": ""string"",
                    ""allowed_values"": ["">="", "">"", ""="", ""<"", ""<=""],
                    ""default"": ""<="",
                    ""description"": ""Comparison operator for category threshold evaluation""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Frequency specification for multi-day evaluations"",
                    ""examples"": [""daily"", ""category limit 5 of 7 days"", ""category target 3 times per week""]
                },
                ""units"": {
                    ""type"": ""string"", 
                    ""description"": ""Measurement unit identifier"",
                    ""examples"": [""selections"", ""instances"", ""occurrences"", ""servings""]
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the categorical scoring configuration""
                }
            },
            ""field_relationships"": {
                ""goal_type_mapping"": {
                    ""reduction + countdown"": ""Category violations decrease available allowance"",
                    ""buildup + buildup"": ""Category achievements increase progress toward goal"",
                    ""assessment + measurement"": ""Category measurements populate evaluation score""
                },
                ""categorical_filtering"": {
                    ""tracked_metrics"": ""Source categorical field"",
                    ""filter_categories"": ""Which categories to count"",
                    ""calculation_method"": ""How to aggregate filtered categories"",
                    ""threshold"": ""Target count for comparison""
                }
            },
            ""validation_rules"": [
                ""goal_type and progress_direction must be logically consistent"",
                ""measurement_type must be 'categorical'"",
                ""tracked_metrics must reference valid categorical field"",
                ""filter_categories must contain valid category values for tracked_metrics field"",
                ""filter_categories array must not be empty"",
                ""threshold must be non-negative number"",
                ""calculation_method must be categorical-specific method""
            ]
        }",Daily categorical selection tracking with threshold limits. Counts specific category choices like energy drink consumption or healthy caffeine source targets.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#13-categorical-filter-daily-sc-categorical-filter-daily,energy drink consumption per day,"REC0014.3,REC0014.1",checked,
SC-CATEGORICAL-FILTER-FREQUENCY,Categorical Filter Frequency Threshold,categorical_filter_threshold,"{
            ""method"": ""categorical_filter_threshold"",
            ""formula"": ""if (count(filter_categories) comparison_operator threshold over frequency_window) then success_value else failure_value"",
            ""evaluation_pattern"": ""frequency"",
            ""required_fields"": [
                ""goal_type"",
                ""progress_direction"",
                ""period_type"",
                ""measurement_type"", 
                ""evaluation_period"",
                ""success_criteria"",
                ""frequency_requirement"",
                ""calculation_method"",
                ""tracked_metrics"",
                ""filter_categories"",
                ""threshold"",
                ""success_value"",
                ""failure_value""
            ],
            ""optional_fields"": [
                ""comparison_operator"",
                ""units"",
                ""description""
            ],
            ""schema"": {
                ""goal_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [
                        ""reduction"", 
                        ""buildup"", 
                        ""assessment""
                    ],
                    ""description"": ""Classification of goal behavior for UI and scoring logic"",
                    ""frequency_examples"": {
                        ""reduction"": ""Weekly energy drink limits, rolling unhealthy category constraints"",
                        ""buildup"": ""Weekly healthy category targets, consistent good choice patterns"",
                        ""assessment"": ""Category frequency patterns, choice consistency tracking""
                    }   
                },
                ""progress_direction"": {
                    ""type"": ""string"",
                    ""allowed_values"": [
                        ""countdown"", 
                        ""buildup"", 
                        ""measurement""
                    ],
                    ""description"": ""How categorical frequency progress is visualized in UI"",
                    ""frequency_ui_behavior"": {
                        ""countdown"": ""Shows category violations remaining in window - 'X category instances remaining this week'"",
                        ""buildup"": ""Shows category targets achieved in window - 'X of Y category targets hit'"",
                        ""measurement"": ""Shows category frequency pattern - 'Category consistency: X%'""
                }
                },
                ""period_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Type of frequency window for categorical evaluation""
                },
                ""measurement_type"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""categorical""],
                    ""description"": ""Fixed as 'categorical' - indicates category filtering within frequency window""
                },
                ""evaluation_period"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""rolling_7_day"", ""rolling_30_day"", ""calendar_week"", ""calendar_month""],
                    ""description"": ""Assessment timeframe for categorical frequency evaluation""
                },
                ""success_criteria"": {
                    ""type"": ""string"",
                    ""allowed_values"": [""frequency_target""],
                    ""description"": ""Success determined by meeting category frequency requirements within window""
                },
                ""frequency_requirement"": {
                    ""type"": ""string"",
                    ""description"": ""Specific frequency specification for categorical success"",
                    ""format_examples"": [
                        ""≤1 energy_drink selection across 7 days"",
                        ""≤3 unhealthy_categories per week"",
                        ""≥5 healthy_categories per week"",
                        ""category limit maintained 6 of 7 days""
                    ]   
                },
                ""calculation_method"": {
                    ""type"": ""string"",
                    ""allowed_values"": [
                        ""categorical_count"", 
                        ""categorical_sum"", 
                        ""categorical_frequency""
                    ],
                    ""description"": ""How categorical frequency value is derived"",
                    ""frequency_methods"": {
                        ""categorical_count"": ""Total count of filter_categories across frequency window"",
                        ""categorical_sum"": ""Total sum of category values across frequency window"", 
                        ""categorical_frequency"": ""Frequency pattern of categories across window""
                    }   
                },
                ""tracked_metrics"": {
                    ""type"": ""string"",
                    ""description"": ""Categorical field name to filter and count across frequency window""
                },
                ""filter_categories"": {
                    ""type"": ""array"",
                    ""description"": ""List of category values to filter and count across frequency window""
                },
                ""threshold"": {
                    ""type"": ""number"",
                    ""description"": ""Count threshold for filtered categories across frequency window""
                },
                ""success_value"": {
                    ""type"": ""number"",
                    ""default"": 100,
                    ""description"": ""Score when category frequency requirement met""
                },
                ""failure_value"": {
                    ""type"": ""number"",
                    ""default"": 0,
                    ""description"": ""Score when category frequency requirement not met""
                },
                ""comparison_operator"": {
                    ""type"": ""string"",
                    ""allowed_values"": ["">="", "">"", ""="", ""<"", ""<=""],
                    ""default"": ""<="",
                    ""description"": ""Comparison operator for category frequency threshold evaluation""
                },
                ""units"": {
                    ""type"": ""string"",
                    ""description"": ""Measurement unit identifier for frequency counts""
                },
                ""description"": {
                    ""type"": ""string"",
                    ""description"": ""Human readable description of the categorical frequency scoring configuration""
                }
            },
            ""categorical_frequency_scoring_logic"": {
                ""step_1"": ""Daily category filtering: Count occurrences of filter_categories each day"",
                ""step_2"": ""Window aggregation: Sum category counts across evaluation_period"",
                ""step_3"": ""Frequency assessment: Compare window total against threshold using comparison_operator"", 
                ""step_4"": ""Final score: frequency_met ? success_value : failure_value""
            },
            ""validation_rules"": [
                ""goal_type and progress_direction must be logically consistent"",
                ""measurement_type must be 'categorical'"",
                ""success_criteria must be 'frequency_target' for frequency evaluation"",
                ""period_type and evaluation_period should match for frequency patterns"",
                ""frequency_requirement must specify achievable pattern within evaluation window"",
                ""filter_categories must contain valid category values"",
                ""threshold must account for frequency window duration""
            ]
        }",Frequency-based categorical pattern tracking. Weekly or rolling window limits on specific category selections with sophisticated filtering logic.,https://github.com/keegs-3/preliminary_data/blob/master/docs/Adherence/Adherence%20Scoring%20Implementation.md#14-categorical-filter-frequency-sc-categorical-filter-frequency,energy drink consumption per week,REC0014.2,checked,